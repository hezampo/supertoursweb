<?php

/**
 * Description of ReserveController
 *
 * @author �ngel Valenca A.
 */

Doo::loadController('I18nController');
Doo::loadHelper('class.phpmailer');
class ReservasController extends I18nController{
   
    public function beforeRun($resource, $action) {
       if (!isset($_SESSION['login'])) {
            return Doo::conf()->APP_URL;
        }
    }
    
    public function index(){
         // Cargamos el paginador
        Doo::loadHelper('DooPager'); 
        if (!isset($_POST["filtro2"])) {
            if (!isset($this->params['filtro2'])) {
		 $filtro = "codconf";
            } else {
                $filtro = $this->params['filtro2'];
	    }
        }else{
	    $filtro = $_POST["filtro2"];
        }
        if (!isset($_POST["texto2"])) {
           if (!isset($this->params['texto2'])) {
                $texto = "";
            } else {
                $texto = $this->params['texto2'];
            } 
        } else {
            $texto = $_POST["texto2"];
        }
               
		
		
        $rs    = Doo::db()->find("Reserve", array("select"=>"COUNT(*) AS total", 
                                                     "where" => "  estado != 'QUOTE' AND  '$filtro' like ?", 
                                                     "limit"=>1,
                                                     "param" => array($texto . '%')
                                                    ));
         $total = $rs->total;

         if ($total == 0)
           $total = 1;
        // iniciamos el paginador
        $pager = new DooPager(Doo::conf()->APP_URL."admin/reservas/$filtro/$texto/page", $total, 10, 5);

        if(isset($this->params['pindex']))
            $pager->paginate(intval($this->params['pindex']));			
        else
            $pager->paginate(1);
		
        
	$rs = Doo::db()->query("select r.id,codconf,fecha_ini,hora,tipo_ticket,fecha_salida,fecha_retorno,pax,pax2,firsname,lasname,totaltotal,
                                ar.nombre as de , ob.nombre as para, ot.phone as phone
									
									from reservas r
									left join areas ar on (r.fromt = ar.id)
									left join areas ob on (r.tot =  ob.id) 
									left join clientes ot on (r.id_clientes =  ot.id) 
									
                                where  estado != 'QUOTE' AND $filtro like ? order by (r.id) DESC limit $pager->limit ", 
                                array('%'.$texto.'%'));	
																        
        $reservas = $rs->fetchAll();
        $this->data['rootUrl'] = Doo::conf()->APP_URL;
        $this->data['content'] = 'configuracion/reservas.php';
        $this->data['filtro2']  = $filtro;
        $this->data['texto2']   = $texto;
        $this->data['reservas']   = $reservas;
        $this->data['pager']   = $pager->output;
        $this->renderc('admin/index', $this->data,true);
    }
	
	   public function quotes(){
         // Cargamos el paginador
        Doo::loadHelper('DooPager'); 
        if (!isset($_POST["filtro2"])) {
            if (!isset($this->params['filtro2'])) {
	        $filtro = "firsname";
            } else {
                $filtro = $this->params['filtro2'];
	    }
        }else{
	    $filtro = $_POST["filtro2"];
        }
        if (!isset($_POST["texto2"])) {
           if (!isset($this->params['texto2'])) {
                $texto = "";
            } else {
                $texto = $this->params['texto2'];
            } 
        } else {
            $texto = $_POST["texto2"];
        }
               
		
		
        $rs    = Doo::db()->find("Reserve", array("select"=>"COUNT(*) AS total", 
                                                     "where" => "  estado = 'QUOTE' AND  '$filtro' like ?", 
                                                     "limit"=>1,
                                                     "param" => array($texto . '%')
                                                    ));
         $total = $rs->total;

         if ($total == 0)
           $total = 1;
        // iniciamos el paginador
        $pager = new DooPager(Doo::conf()->APP_URL."admin/reservas_quotes/$filtro/$texto/page", $total, 10, 5);

        if(isset($this->params['pindex']))
            $pager->paginate(intval($this->params['pindex']));			
        else
            $pager->paginate(1);
		
        
	$rs = Doo::db()->query("select r.id,codconf,fecha_ini,hora,tipo_ticket,fecha_salida,fecha_retorno,pax,pax2,firsname,lasname,totaltotal,
                                ar.nombre as de , ob.nombre as para, ot.phone as phone
									
									from reservas r
									left join areas ar on (r.fromt = ar.id)
									left join areas ob on (r.tot =  ob.id) 
									left join clientes ot on (r.id_clientes =  ot.id) 
									
                                where estado = 'QUOTE' AND $filtro like ? order by (r.id) DESC limit $pager->limit ", 
                                array('%'.$texto.'%'));	
																        
        $reservas = $rs->fetchAll();
        $this->data['rootUrl'] = Doo::conf()->APP_URL;
        $this->data['content'] = 'configuracion/reserves_quote.php';
        $this->data['filtro2']  = $filtro;
        $this->data['texto2']   = $texto;
        $this->data['reservas']   = $reservas;
        $this->data['pager']   = $pager->output;
        $this->renderc('admin/index', $this->data,true);
		
    }
    
  public function add(){
        Doo::loadModel("Clientes");
        $cliente = new Clientes();
        $this->data['rootUrl']     = Doo::conf()->APP_URL;
        $this->data['cliente']        = $cliente;
	   	$this->data['state']  = Doo::db()->find("State",array("select name from State" ,"asArray" => true));
		$this->data['country']  = Doo::db()->find("Country",array("select name from Country" ,"asArray" => true));  
		$this->data['areas'] = Doo::db()->find("Areas", array("select" => "id, nombre", "asArray" => true));
		$this->data['age_comis'] = Doo::db()->find("Agencomi", array("param" => array()));
		
		if(isset($_SESSION['price'])){
		  unset($_SESSION['price']);
		}
		unset($_SESSION['codconf']);
		unset($_SESSION['reserva_edit']);
		$this->actualiarPuestosUsuario(5);
        $this->data['content'] = 'configuracion/frm_reservas.php';
        $this->renderc('admin/index', $this->data);
    }
   
   public function loadAreas(){
		
   
   $this->data['areas'] = Doo::db()->find("Areas", array("select" => "id, nombre", "asArray" => true));
   
	$html = ""; 	
    foreach( $this->data['areas'] as $e):
	  $html .= "<option value='".$e["id"]."' ".($e["nombre"] == trim(" ")?'selected':"ORLANDO").">".$e["nombre"]."</option>";
    endforeach;
    echo $html; 	
	
   }
   
   public function pagoWeb(){
		extract($_POST,EXTR_SKIP);
		if($opcion_pago<=2){
	    	if($idPagador != ''){
				Doo::loadModel("Clientes");
				$cliente = new Clientes();
				$cliente->id = $idPagador;
				$cliente = Doo::db()->find($cliente, array('limit' => 1));
				if(!empty($cliente)){
					//Generar codigo de confirmaciòn.	
					$_SESSION['codconf'] = $this->codigoConf(1);
					if(isset($_SESSION['reserva_edit'])){
						$r_anterior =  new Reserve($_SESSION['reserva_edit']);
						$pagado = $this->pagado($r_anterior->id);
					}else{
						$pagado = 0;
					}
					$apagar = 0;
					if(is_numeric($otheramount) && $otheramount>0) {
						$apagar = $otheramount-$pagado;
					}else{
						$apagar =  $totP-$pagado;
					}
					if($apagar>0){
						$_SESSION['toursbooking']['pago_pred'] = $apagar;
						$this->data['rootUrl'] = Doo::conf()->APP_URL;
						$this->data['usuario'] = $cliente;
						$this->view()->renderc('admin/configuracion/pago', $this->data);
					}else{
						return Doo::conf()->APP_URL."admin/reservas/edit/".$r_anterior->id;
					}
				}else{
					echo '<script type="text/javascript">
					alert("The selected client is not registered.\n Please record the client and try again");
					close();
					</script>';
				}
			}else{
				echo '<script type="text/javascript">
					alert("The selected client is not registered.\n Please record the client and try again");
					close();
					</script>';
			}
		}
   }
   
   public function estado_pago(){
	   if(isset($_SESSION['reserve_pago']) && $_SESSION['reserve_pago'] == 'ok'){
		   echo '<table>
		   			<tr>
						<td align="left">
		  					<samp style="font-size: 18px;
									font-weight: bold;
									color: #0B55C4;
									background-repeat: no-repeat;
									float: left;">Transaction has been successful</samp>			
						</td>
						</tr>
						<tr>
							<td  align="left">
								<strong>Press the save button to complete the reservation</strong>
							<td>
						</tr>';
		   echo "<script>
		   			$('#btn-save1').css('display','block');
		   			$('#btn-save2').css('display','block');
				</script>";
	   }else if(isset($_SESSION['reserve_pago']) && $_SESSION['reserve_pago'] == '...'){
		   echo '<table>
		   			<tr>
						<td align="left">
							<samp style="font-size: 18px;
									font-weight: bold;
									color: #DD0005;
									background-repeat: no-repeat;
									width: 87%;
									float: left;">
								Transaction processing
							</samp>
						</td>
						</tr>
						<tr>
							<td>
								You must complete the transaction in order to maintain the confidentiality
							<td>
						</tr>
				</table>';
	   }else if(isset($_SESSION['reserve_pago']) && $_SESSION['reserve_pago'] == 'no'){
		   echo '<table>
		   			<tr>
						<td align="left">
							<samp style="font-size: 18px;
									font-weight: bold;
									color: #DD0005;
									background-repeat: no-repeat;
									width: 100%;
									float: left;">
								Transaction declined.
							</samp>
						</td>
						</tr>
						<tr>
							<td>
								Check that the Credit Card are correct
							<td>
						</tr>
				</table>';
	   }
   }
   
   public function response_aproval(){
	    if(isset($_GET['ssl_approval_code']) && isset($_SESSION['codconf']) ){
			$_SESSION['codconf']= $_SESSION['codconf']."-".$_GET['ssl_approval_code'];
			$_SESSION['reserve_pago']='ok';
			$data['rootUrl'] = Doo::conf()->APP_URL;
			$this->view()->renderc('admin/configuracion/approval', $data);
        }else{
			unset($_SESSION['codconf']);
			unset($_SESSION['reserve_pago']);
			return Doo::conf()->APP_URL."transaction/admin/reserva/decline/";
		}
   }
   
   public function response_decline(){
	   $_SESSION['reserve_pago']='no';
	   $data['rootUrl'] = Doo::conf()->APP_URL;
	   $this->view()->renderc('admin/configuracion/decline', $data);
   }
   
   public function saveReserve(){
		extract($_POST,EXTR_SKIP);
		Doo::loadModel("Clientes");
		if(trim($idCliente) != ''){
			$cliente = new Clientes();
			$cliente->id = $idCliente;
			$cliente = Doo::db()->find($cliente, array('limit' => 1));
		}else{
			$cliente = new Clientes();
			$cliente->firstname = $firstname1;
			$cliente->lastname = $lastname1;
			$cliente->phone = $phone1;
			$cliente->username = $email1;
			if(Doo::db()->insert($cliente));
		    $id_cliente = Doo::db()->lastInsertId();
			$cliente->id = $id_cliente;
		}

		Doo::loadModel("Reserve");
		if(isset($ext_from1)){
			$sql = "SELECT id,precio FROM extension WHERE id = ?";
			$rs = Doo::db()->query($sql,array($ext_from1)); 
			$datos = $rs->fetch();	
			
			$precio_e1 = $datos['precio'];
			$extension1 = $datos['id'];				
		}else{
			$precio_e1 = 0;
			$extension1 = 0;
		}
		if(isset($ext_to1)){
			$sql = "SELECT id,precio FROM extension WHERE id = ?";
			$rs = Doo::db()->query($sql,array($ext_to1)); 
			$datos = $rs->fetch();	
			$precio_e2 = $datos['precio'];
			$extension2 = $datos['id'];				
		}else{
			$precio_e2 = 0;
			$extension2 = 0;
		}
		
		if(isset($ext_from2)){
			$sql = "SELECT id,precio FROM extension WHERE id = ?";
			$rs = Doo::db()->query($sql,array($ext_from2)); 
			$datos = $rs->fetch();	
			
			$precio_e3 = $datos['precio'];
			$extension3 = $datos['id'];				
		}else{
			$precio_e3 = 0;
			$extension3 = 0;
		}
		if(isset($ext_to2)){
			$sql = "SELECT id,precio FROM extension WHERE id = ?";
			$rs = Doo::db()->query($sql,array($ext_to2)); 
			$datos = $rs->fetch();	
			
			$precio_e4 = $datos['precio'];
			$extension4 = $datos['id'];				
		}else{
			$precio_e4 = 0;
			$extension4 = 0;
		}
		$tipoticket = "";// Tipo de tiquete
		if($tipo_ticket == 1){
			$tipoticket = "oneway";
		}else{
			$tipoticket = "roundtrip";
		}
		if(!isset($_SESSION['codconf'])){
			if(trim($estado) == 'QUOTE'){
				$_SESSION['codconf'] = $this->codigoConf(0);	
			}else{
				$_SESSION['codconf'] = $this->codigoConf(1);	
			}
			$codconf = $_SESSION['codconf'];
		}else{
			$codconf = $_SESSION['codconf'];
		}
		Doo::loadModel("Agency");
		if($id_agency != -1){
			$dat = new Agency();
			$dat->id = $id_agency;
			$agencys = Doo::db()->find($dat,array("limit",1)); 
			if(!empty($agencys)){
		       	$dat = new Agency($agencys[0]);  	
			}else{
				$dat = new Agency();
				$dat->id = -1;
				$dat->type_rate = 0;
			}
		}else{
			$dat = new Agency();
			$dat->id = -1;
			$dat->type_rate = 0;
		}
		
		 if(isset($_REQUEST['opcion_pago'])){
           $pago = $_REQUEST['opcion_pago']; 
          }else
           $pago = 1;
		  
		  if(isset($_REQUEST['opcion_pago_saldo'])){
           	$opcion_saldo = $_REQUEST['opcion_pago_saldo']; 
          }else
           	$opcion_saldo = 1;
			
		
		//La Reserva
		$op = $this->types_payments();
		$arval = array_values($op[$pago]);
        $arkey = array_keys($op[$pago]);
		$tipoP = $arkey[0];
		$formaP = $arval[0];
		if($opcion_saldo==2){
			  $tiposaldo = "BALANCE";
		  } else{
			  $tiposaldo = "FULL";
		 }
		list ($mes, $dia, $anyo) = explode("-", $fecha_salida);
			$fecha_salida = $anyo . "-" . $mes . "-" . $dia;	
		if($tipoticket == 'roundtrip'){
			list ($mes2, $dia2, $anyo2) = explode("-", $fecha_retorno);
			$fecha_retorno = $anyo2 . "-" . $mes2 . "-" . $dia2;	
		}else{
			$fecha_retorno = 'N/A';
		}
		if(!is_numeric($extra)){
			$extra = 0;
		}

                if(!is_numeric($extra)){
			$extra = 0;
		}

		if(0>$extra){
			$extra = 0;
		}
		

		if(!is_numeric($descuento)){
			$descuento = 0;
		}
                
                
                if(!is_numeric($descuento_valor)){
			$descuento_valor = 0;
		}

                if(0>$descuento_valor){
			$descuento_valor = 0;
		}

		if(0>$otheramount){
			$otheramount = 0;
		}
		
		//$total_neto = $totP;
		$total_neto = ($transadult*$pax) + ($transchild*$pax2) + 
					  ( ($precio_e1+$precio_e2+$precio_e3+$precio_e4)  * ($pax+$pax2) );
                $val_procentaje = 0;
                if($descuento>0){
                     $val_procentaje = ($total_neto*$descuento)/100;
                }else{
                     $descuento = 0;
                }
		$total_reserva= $total_neto + $extra - $val_procentaje - $descuento_valor;
		if($pago == '3'){//"Credit Card+ 4 % FEE
			$total_reserva = $total_reserva + ($total_reserva*0.04);
		}

		$reserve = new Reserve();
		$reserve->id_tours;
		$reserve->type_tour;
		$reserve->fecha_ini = date("Y-m-d");
		$reserve->trip_no = $trip_no;
		$reserve->trip_no2 = $trip_no2;	
		$reserve->tipo_ticket = $tipoticket;
		$reserve->fromt = $fromt;
		$reserve->tot = $to;
		if($tipoticket == 'roundtrip'){
			$reserve->fromt2 = $fromt2;
			$reserve->tot2 = $to2;
		}
		$reserve->firsname = $cliente->firstname;
		$reserve->lasname = $cliente->lastname;
		$reserve->email = $cliente->username;
		$reserve->deptime1 = date("H:i", strtotime($departure1));
		$reserve->deptime2 =  date("H:i", strtotime($departure2));
		$reserve->arrtime1 = date("H:i", strtotime($arrival1));
		$reserve->arrtime2 = date("H:i", strtotime($arrival2));
		$reserve->precioA = $transadult;//--
		$reserve->precioN = $transchild;//--	
		$reserve->extension1 = $extension1;
		$reserve->precio_e1 = $precio_e1;
		$reserve->pickup_exten1 = isset($exten1)?$exten1:'';
		$reserve->extension2 = $extension2;
		$reserve->precio_e2 = $precio_e2;
		$reserve->pickup_exten2 = isset($exten2)?$exten2:'';
		$reserve->extension3 = $extension3;
		$reserve->precio_e3 = $precio_e3;
		$reserve->pickup_exten3 = isset($exten3)?$exten3:'';
		$reserve->extension4 = $extension4;
		$reserve->precio_e4 = $precio_e4;
		$reserve->pickup_exten4 = isset($exten4)?$exten4:'';
		$reserve->fecha_salida = $fecha_salida;
		$reserve->fecha_retorno = $fecha_retorno;
		$reserve->pax = $pax;
		$reserve->pax2 = $pax2;
		$reserve->id_clientes = $cliente->id;
		$reserve->pickup1 = $id_p1;
		$reserve->dropoff1 = $id_dropoff1;
		$reserve->pickup2 = $id_pickup2;
		$reserve->dropoff2 = $id_dropoff2;
		$reserve->tipo_pago = $tipoP;
		$reserve->pago = $formaP.'-'.$tiposaldo;
		$reserve->totaltotal = $total_reserva;
		$reserve->otheramount = $otheramount;
		$reserve->extra_charge = $extra;
                $reserve->descuento_procentaje = $descuento;
                $reserve->descuento_valor = $descuento_valor;

		$reserve->total2 = $total_neto;
		$reserve->codconf = $codconf;
		$reserve->hora = date("H:i",time()); 
		$reserve->comments = $notes;
		$reserve->resident = $tipo_pass;
		$reserve->agen = $id_agency;
		$reserve->tipo_client = $cliente->tipo_client; 
		$reserve->reward_id;
		$reserve->agency = $id_agency;
		$reserve->luggage1  = 0;
		$reserve->luggage2 = 0;
		$reserve->canal = $canal;
		if(trim($estado) != ''){
			$reserve->estado  = $estado;	
		}
		if(Doo::db()->insert($reserve)){
		   $id_reserva = Doo::db()->lastInsertId();
		   $reserve->id = $id_reserva;
		   $login = $_SESSION['login'];
		   $reserves_a = NULL;
		   $this->registrar_pago($reserve, $reserves_a , $login);
		   
		   $login->tipo = 'OPERATOR';
		   $this->rastro_reserva('CREATE',$reserves_a  ,$reserve, $login);
		   
		    Doo::loadModel("Reservas_Agency");  
		   $reserves_a = new Reservas_Agency();
		   $reserves_a->id_reservas = $id_reserva;
		   $reserves_a->id_agencia = $id_agency;
		   $reserves_a->id_cliente = $cliente->id; 
		   $reserves_a->type_client = $cliente->tipo_client; 
		   $reserves_a->id_useragency = $id_auser;
		   $reserves_a->paid_type = $tipoP;
		   $reserves_a->metodo_paid = $formaP.'-'.$tiposaldo;
		   $reserves_a->comision =  $comision;
		   $reserves_a->agency_fee = $total_neto*$comision/100;
		   $reserves_a->paper_voucher=0;
		   $reserves_a->paid_net = $total_neto;
		   
		   
		   if($dat->id!=-1){ 
			   if($opcion_saldo==2 && $pago != 5){
				  $total_pagado = $total_neto - ($total_neto*$reserves_a->comision/100);	
			  }else{
				  $total_pagado = $total_reserva;
			  }
		  
			  
			$reserves_a->paid_full = $total_pagado;
			Doo::db()->insert($reserves_a);
		   }else{
			   $reserves_a = NULL; 
		   }
		   $this->correo($reserve, $reserves_a);
		   return Doo::conf()->APP_URL."admin/reservas";
		   unset($_SESSION['codconf']);
		}else{
			 //
		}
				 		
		return Doo::conf()->APP_URL . "admin/reservas/add";
   }

   public function editReserve(){
		Doo::loadModel("Reserve");
		Doo::loadModel("Clientes");
		Doo::loadModel("Routes");
		Doo::loadModel("Agency");
		Doo::loadModel("PickupDropoff");		
		Doo::loadModel("Extension");
		Doo::loadModel("UserA");
		Doo::loadModel("Reservas_Agency"); 
		if(isset($this->params["pindex"])){
			if(isset($this->params["url"])){
				$url_back = str_replace('.','/',$this->params["url"]);
			}else{
				$url_back = 'admin/reservas';
			}
			$reserve = new Reserve();
			$cliente = new Clientes();
			$pickup1 = new PickupDropoff();
			$pickup2 = new PickupDropoff();		
			$drop1 = new PickupDropoff();        
			$drop2 = new PickupDropoff();
			$extencion1 = new Extension();
			$extencion2 = new Extension();		
			$extencion3 = new Extension();        
			$extencion4 = new Extension();
			$agencia = new Agency();
			$userA = new UserABase();
			$reserver_a = new Reservas_Agency();
			$reserve->id = $this->params["pindex"];
			$reserve = Doo::db()->find($reserve, array('limit' => 1));
			if(!empty($reserve)){
				//RASTRO-> Modificaciones de la reserva
				$sql = "SELECT `id`, `id_reserva`, `tipo_cambio`, `detalles`, `fecha`, `usuario`, `tipo_usuario` FROM `reservas_rastro` WHERE id_reserva = ? ORDER BY  `reservas_rastro`.`fecha` DESC 
";
				$rs = Doo::db()->query($sql,array($reserve->id));
				$rastro =  $rs->fetchAll();	
				foreach($rastro as $key => $rr){
					if($rr['tipo_usuario']=='OPERATOR'){
						Doo::loadModel("Usuarios"); 
						$usuario = new Usuarios();
						$usuario->id = $rr['usuario'];
						$usuario = Doo::db()->find($usuario, array('limit' => 1));
						if(!empty($usuario)){
							$rr['id_usuario'] = $usuario->id;
							$rr['usuario'] = $usuario->nombre;	
						}else{
							$rr['id_usuario'] = $rr['usuario'];
							$rr['usuario'] = 'User Not Found';
						}
					}else if($rr['tipo_usuario']=='CLIENT'){
						Doo::loadModel("Clientes"); 
						$cli = new Clientes();
						$cli->id = $rr['usuario'];
						$cli = Doo::db()->find($cli, array('limit' => 1));
						if(!empty($cli)){
							$rr['id_usuario'] = $cli->id;
							$rr['usuario'] = $cli->firstname.' '.$cli->lastname;	
						}else{
							$rr['id_usuario'] = $rr['usuario'];
							$rr['usuario'] = 'User Not Found';
						}
					}
					$rastro[$key] = $rr;
				}
				
				//PAGOS REALIZADOS
				$pagado = $this->pagado($reserve->id);
				
				//Cliente
				if($reserve->id_clientes==NULL){
					$cliente = new Clientes();
					$cliente->id = $reserve->id_clientes;
					$cliente->username = $reserve->email;
					$cliente->firstname = $reserve->firsname;
					$cliente->lastname = $reserve->lasname;
				}else{
					$cliente = new Clientes();
					$cliente->id = $reserve->id_clientes;
					$cliente = Doo::db()->find($cliente, array('limit' => 1));				
					if(empty($cliente)){
						$cliente = new Clientes();
						$cliente->id = $reserve->id_clientes;
						$cliente->username = $reserve->email;
						$cliente->firstname = $reserve->firsname;
						$cliente->lastname = $reserve->lasname;
					}
				}
				$datos = get_object_vars($cliente);
				$cliente_apto = $this->clienteAptoPagoWeb($datos);
				
				
				//PickupDropoff-IDA
				$pickup1->id = $reserve->pickup1;
				$drop1->id = $reserve->dropoff1;
				$pickup1  = Doo::db()->find($pickup1, array('limit' => 1));
				$drop1  = Doo::db()->find($drop1, array('limit' => 1));
				
				//Agencia
				$agencia->id  = $reserve->agency;
				if($agencia->id!=-1){
					$agencia  = Doo::db()->find($agencia, array('limit' => 1));
					$reserver_a->id_reservas = $reserve->id;
					$reserver_a  = Doo::db()->find($reserver_a, array('limit' => 1));
					if(!empty($reserver_a)){
						$userA->id = $reserver_a->id_useragency;
						$userA = Doo::db()->find($userA, array('limit' => 1));	
					}
					$rs = Doo::db()->query("SELECT acount,opcion1,opcion2,opcion3,opcion4,opcion5,days
												   FROM agency_account WHERE id_agencia = ? ", 
													array($agencia->id));
					$agen_account = $rs->fetchAll();
					if(!empty($agen_account)){
						$agen_account = $agen_account[0];	
					}else{
						$agen_account  = array();
						$agen_account['opcion1'] = 0;
						$agen_account['opcion2'] = 0;
						$agen_account['opcion3'] = 1;
						$agen_account['opcion4'] = 1;
						$agen_account['opcion5'] = 0;							
					}
				}else{
					$agencia->type_rate = 0;  
					$agen_account  = array();
					$agen_account['opcion1'] = 0;
					$agen_account['opcion2'] = 0;
					$agen_account['opcion3'] = 1;
					$agen_account['opcion4'] = 1;
					$agen_account['opcion5'] = 0;
				}
				$from = $reserve->fromt;
				$to = $reserve->tot;
				if($reserve->tipo_ticket == "roundtrip"){
					//PickupDropoff-RETORNO
					$pickup2->id = $reserve->pickup2;
					$drop2->id = $reserve->dropoff2;
					$pickup2  = Doo::db()->find($pickup2, array('limit' => 1));
				    $drop2  = Doo::db()->find($drop2, array('limit' => 1));
					//ROUTE RETORNO
					$from2 = $reserve->fromt2;
					$to2 = $reserve->tot2;
					$trip = $reserve->trip_no2;
				}
				
				//EXTENCIONES ESCOGIDAS
				if($reserve->extension1!= 0){
					$extencion1->id = $reserve->extension1;
					$extencion1  = Doo::db()->find($extencion1, array('limit' => 1));
				}
				if($reserve->extension2!= 0){
					$extencion2->id = $reserve->extension2;
					$extencion2  = Doo::db()->find($extencion2, array('limit' => 1));
				}
				if($reserve->extension3!= 0){
					$extencion3->id = $reserve->extension3;
					$extencion3  = Doo::db()->find($extencion3, array('limit' => 1));
				}
				if($reserve->extension4!= 0){
					$extencion4->id = $reserve->extension4;
					$extencion4  = Doo::db()->find($extencion4, array('limit' => 1));
				}
				//LISTA DE EXTENCIONES
				$sql = "SELECT * FROM  `extension` Where id_area = ?";
				$rs = Doo::db()->query($sql,array($reserve->fromt));
				$extenFrom1 = $rs->fetchAll();
				
				$sql = "SELECT * FROM  `extension` Where id_area = ?";
				$rs = Doo::db()->query($sql,array($reserve->tot));
				$extenTo1 = $rs->fetchAll();
				
				//LISTA DE EXTENCIONES
				$sql = "SELECT * FROM  `extension` Where id_area = ?";
				$rs = Doo::db()->query($sql,array($reserve->fromt2));
				$extenFrom2 = $rs->fetchAll();
				
				$sql = "SELECT * FROM  `extension` Where id_area = ?";
				$rs = Doo::db()->query($sql,array($reserve->tot2));
				$extenTo2 = $rs->fetchAll();	
					
				
				//AREAS 
				$sql = "SELECT DISTINCT t1.trip_to, t2.nombre
						FROM routes t1 LEFT JOIN areas t2 ON ( t1.trip_to = t2.id ) 
						ORDER BY  `t1`.`trip_to` ASC ";
        		$rs = Doo::db()->query($sql);
				$from_areas  = $rs->fetchAll();		
				
				if($reserve->type_tour=='ONE' || $reserve->type_tour=='MULTI' ){// Solo se muestra orlando
					$sql = "SELECT distinct t1.trip_to, t2.nombre  FROM routes t1 
					LEFT JOIN areas t2 ON (t1.trip_to = t2.id)
					WHERE t2.id = 1";
					$rs = Doo::db()->query($sql);
				}else{
					$sql = "SELECT distinct t1.trip_to, t2.nombre  FROM routes t1 
					LEFT JOIN areas t2 ON (t1.trip_to = t2.id)
					WHERE t1.trip_from = ?";
					$rs = Doo::db()->query($sql, array($reserve->fromt));
				}
                                $to_areas  = $rs->fetchAll();                                
                                
                                $sql = "SELECT distinct t1.trip_to, t2.nombre  FROM routes t1 
					LEFT JOIN areas t2 ON (t1.trip_to = t2.id)
					WHERE t1.trip_from = ?";
				$rs = Doo::db()->query($sql, array($reserve->fromt2));
                                $to_areas2= $rs->fetchAll();
                                //echo $reserve->fromt2;
                                
                                
						
				
				//PRECIOS TRIP
				if($reserve->id_tours == -1){
					$fecha = date('m-d-Y', strtotime($reserve->fecha_salida));
					$precioTrip1 = $this->precioTrip($reserve->trip_no,$reserve->fromt,$reserve->tot,$fecha,$agencia);
					$subto = array();
				
					if($reserve->resident != 1){
						$subto['child1'] = $precioTrip1['price2'];
						$subto['adult1']= $precioTrip1['price'];
					}else{
						$subto['child1'] = $precioTrip1['price3'];
						$subto['adult1']= $precioTrip1['price4'];
					}
					$subto['comi1'] = $this->comision_trip($reserve->trip_no);	
				}else{
					Doo::loadController('admin/ToursController');
					$toursOperador = new ToursController();
					$prices = $toursOperador->precioTripTours($reserve->trip_no, $agencia->type_rate, $agencia->id );
					$subto['child1'] = $prices['child'];
					$subto['adult1']= $prices['adult'];
					$subto['comi1'] = 0;
				}
			
				if($reserve->tipo_ticket == 'roundtrip'){
					if($reserve->id_tours == -1){
							$fecha = date('m-d-Y', strtotime($reserve->fecha_retorno));
//                                                        echo '<br/>';
//                                                        echo $reserve->id.'...'.$reserve->trip_no2.'...'.$reserve->fromt2.'...'.$reserve->tot2.'...'.$fecha.'...'.$agencia->id;
//                                                        
							$precioTrip2 = $this->precioTrip($reserve->trip_no2,$reserve->fromt2,$reserve->tot2,$fecha,$agencia);
							if($reserve->resident != 1){
								$subto['child2'] = $precioTrip2['price2'];
								$subto['adult2']= $precioTrip2['price'];
							}else{
								$subto['child2'] = $precioTrip2['price3'];
								$subto['adult2']= $precioTrip2['price4'];
							}
							$subto['comi2'] = $this->comision_trip($reserve->trip_no2);
					}else{
						Doo::loadController('admin/ToursController');
						$toursOperador = new ToursController();
						$prices = $toursOperador->precioTripTours($reserve->trip_no2, $agencia->type_rate, $agencia->id );
						$subto['child2'] = $prices['child'];
						$subto['adult2']= $prices['adult'];
						$subto['comi2'] = 0;
					}
				}else{
					$subto['child2'] = 0;
					$subto['adult2']= 0;
					$subto['comi2'] = 0;
				}
				
				Doo::loadController("AgenciaController");
				$agenControl = new AgenciaController();
				$disponible = $agenControl->iscredit();
				
				$_SESSION['reserva_edit'] = $reserve;
				$this->data['reserve'] = $reserve;
				$this->data['subto'] = $subto;
				$this->data['rastro'] = $rastro;
				$this->data['pagado'] = $pagado;
				$this->data['cliente'] = $cliente;
				$this->data['cliente_apto'] = $cliente_apto;
				$this->data['pickup1'] = $pickup1;
				$this->data['pickup2'] = $pickup2;
				$this->data['drop1'] = $drop1;
				$this->data['drop2'] = $drop2;
				$this->data['extencion1'] = $extencion1;
				$this->data['extencion2'] = $extencion2;
				$this->data['extencion3'] = $extencion3;
				$this->data['extencion4'] = $extencion4;
				$this->data['extenFrom1'] = $extenFrom1;
				$this->data['extenTo1'] = $extenTo1;
				$this->data['extenFrom2'] = $extenFrom2;
				$this->data['extenTo2'] = $extenTo2;
				$this->data['to_areas'] = $to_areas;
				$this->data['from_areas'] = $from_areas;
                                $this->data['to_areas2'] = $to_areas2;
				$this->data['agencia'] = $agencia;
				$this->data['disponible'] = $disponible;
				$this->data['agen_account'] = $agen_account;
				$this->data['reserver_a'] = $reserver_a;
				$this->data['userA'] = $userA;
				$this->data['areas'] = Doo::db()->find("Areas", array("select" => "id, nombre", "asArray" => true));
				if($reserve->type_tour=='ONE' || $reserve->type_tour=='MULTI' ){// Solo vista no editar
					$this->data['content'] = 'configuracion/reservas_view.php';
				}else{
					$this->data['content'] = 'configuracion/frm_reservas_edit.php';
				}
				$this->data['rootUrl'] = Doo::conf()->APP_URL;
				$this->data['url_back'] = Doo::conf()->APP_URL.$url_back;
				$this->actualiarPuestosUsuario(5);
				$this->view()->renderc('admin/index', $this->data);
			}else{
				//Salir
			}
		}else{
			//Salir	
		}	
   }
   
   public function save_editReserve(){
	   extract($_POST,EXTR_SKIP);
		Doo::loadModel("Reserve");
		if(isset($ext_from1) && $ext_from1 != 0){
			$sql = "SELECT id,precio FROM extension WHERE id = ?";
			$rs = Doo::db()->query($sql,array($ext_from1)); 
			$datos = $rs->fetch();	
			$precio_e1 = $datos['precio'];
			$extension1 = $datos['id'];				
		}else{
			$precio_e1 = 0;
			$extension1 = 0;
		}
		if(isset($ext_to1)  && $ext_to1 != 0){
			$sql = "SELECT id, precio FROM extension WHERE id = ?";
			$rs = Doo::db()->query($sql,array($ext_to1)); 
			$datos = $rs->fetch();	
			$precio_e2 = $datos['precio'];
			$extension2 = $datos['id'];				
		}else{
			$precio_e2 = 0;
			$extension2 = 0;
		}
		
		if(isset($ext_from2)  && $ext_from2 != 0){
			$sql = "SELECT id,precio FROM extension WHERE id = ?";
			$rs = Doo::db()->query($sql,array($ext_from2)); 
			$datos = $rs->fetch();	
			
			$precio_e3 = $datos['precio'];
			$extension3 = $datos['id'];				
		}else{
			$precio_e3 = 0;
			$extension3 = 0;
		}
		if(isset($ext_to2)  && $ext_to2 != 0){
			$sql = "SELECT id,precio FROM extension WHERE id = ?";
			$rs = Doo::db()->query($sql,array($ext_to2)); 
			$datos = $rs->fetch();	
			
			$precio_e4 = $datos['precio'];
			$extension4 = $datos['id'];				
		}else{
			$precio_e4 = 0;
			$extension4 = 0;
		}
		$tipoticket = "";// Tipo de tiquete
		if($tipo_ticket == 1){
			$tipoticket = "oneway";
		}else{
			$tipoticket = "roundtrip";
		}
		if(!isset($_SESSION['codconf'])){
			if(trim($estado) == 'QUOTE'){
				$_SESSION['codconf'] = $this->codigoConf(0);	
			}else{
				$_SESSION['codconf'] = $this->codigoConf(1);	
			}
		}else{
			$codconf = $_SESSION['codconf'];
		}
		Doo::loadModel("Agency");
		if($id_agency != -1){
			$dat = new Agency();
			$dat->id = $id_agency;
			$agencys = Doo::db()->find($dat,array("limit",1)); 
	       	$dat = new Agency($agencys[0]);   	
		}else{
			$dat = new Agency();
			$dat->id = -1;
			$dat->type_rate = 0;
		}
		
		 if(isset($_REQUEST['opcion_pago'])){
           $pago = $_REQUEST['opcion_pago']; 
          }else
           $pago = 1;
		  
		  if(isset($_REQUEST['opcion_pago_saldo'])){
           	$opcion_saldo = $_REQUEST['opcion_pago_saldo']; 
          }else
           	$opcion_saldo = 1;
		
		
			
		 $op = $this->types_payments();
		//La Reserva
		$arval = array_values($op[$pago]);
        $arkey = array_keys($op[$pago]);
		$tipoP = $arkey[0];
		$formaP = $arval[0];
		if($opcion_saldo==2){
			  $tiposaldo = "BALANCE";
		  } else{
			  $tiposaldo = "FULL";
		}
		list ($mes, $dia, $anyo) = explode("-", $fecha_salida);
			$fecha_salida = $anyo . "-" . $mes . "-" . $dia;	
		if($tipoticket == 'roundtrip'){
			list ($mes2, $dia2, $anyo2) = explode("-", $fecha_retorno);
			$fecha_retorno = $anyo2 . "-" . $mes2 . "-" . $dia2;	
		}else{
			$fecha_retorno = 'N/A';
		}
		if(!is_numeric($extra)){
			$extra = 0;
		}
		if(0>$extra){
			$extra = 0;
		}
		if(!is_numeric($otheramount)){
			$otheramount = 0;
		}
		if(0>$otheramount){
			$otheramount = 0;
		}
		
		//$total_neto = $totP;
		$total_neto = ($transadult*$pax) + ($transchild*$pax2) + 
					  ( ($precio_e1+$precio_e2+$precio_e3+$precio_e4)  * ($pax+$pax2) );
		$total_reserva=$total_neto+$extra;
		if($pago == '3'){//"Credit Card+ 4 % FEE
			$total_reserva = $total_reserva + ($total_reserva*0.04);
		}
		
		
		
		$r_anterior =  new Reserve($_SESSION['reserva_edit']);//Datos de la reserva anterior
		$reserve = new Reserve();
		$reserve->id = $r_anterior->id;
		$reserve->id_tours = -1;
		$reserve->type_tour;
		$reserve->fecha_ini = $r_anterior->fecha_ini; 
		$reserve->trip_no = $trip_no;
		$reserve->trip_no2 = $trip_no2;	
		$reserve->tipo_ticket = $tipoticket;
		$reserve->fromt = $fromt;
		$reserve->tot = $to;
		if($tipoticket == 'roundtrip'){
			$reserve->fromt2 = $fromt2;
			$reserve->tot2 = $to2;
		}
                
		$reserve->firsname = $firstname1;
		$reserve->lasname = $lastname1;
		$reserve->email = $email1;
		$reserve->deptime1 = date("H:i", strtotime($departure1));
		$reserve->deptime2 =  date("H:i", strtotime($departure2));
		$reserve->arrtime1 = date("H:i", strtotime($arrival1));
		$reserve->arrtime2 = date("H:i", strtotime($arrival2));
		$reserve->precioA = $transadult;//--
		$reserve->precioN = $transchild;//--	
		$reserve->extension1 = $extension1;
		$reserve->precio_e1 = $precio_e1;
		$reserve->extension2 = $extension2;
		$reserve->precio_e2 = $precio_e2;
		$reserve->extension3 = $extension3;
		$reserve->precio_e3 = $precio_e3;
		$reserve->extension4 = $extension4;
		$reserve->precio_e4 = $precio_e4;
		$reserve->fecha_salida = $fecha_salida;
		$reserve->fecha_retorno = $fecha_retorno;
		$reserve->pax = $pax;
		$reserve->pax2 = $pax2;
		if($idCliente != 0 && trim($idCliente) != ''){
			$reserve->id_clientes = $idCliente;
		}
		$reserve->pickup1 = ($id_p1!='')?$id_p1:0;
		$reserve->dropoff1 = ($id_dropoff1!='')?$id_dropoff1:0;
		$reserve->pickup2 = ($id_pickup2!='')?$id_pickup2:0;
		$reserve->dropoff2 = ($id_dropoff2!='')?$id_dropoff2:0;
		$reserve->tipo_pago = $tipoP;
		$reserve->pago = $formaP.'-'.$tiposaldo;
		$reserve->totaltotal = $total_reserva;
		$reserve->otheramount = $otheramount;
		$reserve->extra_charge = $extra;
		$reserve->total2 = $total_neto;
		$reserve->codconf = $r_anterior->codconf;
		$reserve->hora = $r_anterior->hora; 
		$reserve->comments = $notes;
		$reserve->resident = $tipo_pass;
		$reserve->agen = $id_agency;
		$reserve->tipo_client = $type_cliente ; 
		$reserve->reward_id;
		$reserve->agency = $id_agency;
		$reserve->luggage1 = $r_anterior->luggage1;
		$reserve->luggage2 = $r_anterior->luggage2;
		$reserve->canal = $r_anterior->canal;
		if($estado == ''){
			$reserve->estado = $r_anterior->estado;
		}else{
			$reserve->estado = $estado;
		}
		if(Doo::db()->update($reserve)){
		   $login = $_SESSION['login'];
		   $login->tipo = 'OPERATOR';
		   $this->registrar_pago($reserve, $r_anterior, $login);
		   $this->rastro_reserva('UPDATE', $r_anterior,$reserve, $login);
		   unset($_SESSION['reserva_edit']);
		   if($id_agency != -1){
			    Doo::loadModel("Reservas_Agency"); 
			    $reserves_a = new Reservas_Agency();
				$reserves_a->id_reservas = $reserve->id;
				$reserves_a = Doo::db()->find($reserves_a, array('limit' => 1));
				$id_reser_agency = $reserves_a->id;
			   if($dat->type_rate==1){
				   $comision = 0;
			   }else{
				   Doo::loadController("MainController");
				   $main = new MainController();
				   $comision = ($main->cal_equipament($reserve->trip_no)+$main->cal_equipament($reserve->trip_no2))/2;
			  }
			   if($opcion_saldo==2 && $pago != 5){
				  $total_pagado = $total_neto - ($total_neto*$reserves_a->comision/100);	
			  }else{
				  $total_pagado = $total_reserva;
			  }
			   $reserves_a = new Reservas_Agency();
			   $reserves_a->id = $id_reser_agency;
			   $reserves_a->id_reservas = $reserve->id;
			   $reserves_a->id_agencia = $id_agency;
			   $reserves_a->id_cliente = $idCliente; 
			   $reserves_a->type_client = $type_cliente; 
			   $reserves_a->id_useragency = $id_auser;
			   $reserves_a->paid_type = $tipoP;
			   $reserves_a->metodo_paid = $formaP.'-'.$tiposaldo;
			   $reserves_a->comision =  $comision;
			   $reserves_a->agency_fee = $total_neto*$comision/100;
			   $reserves_a->paper_voucher=0;
			   $reserves_a->paid_net = $total_neto;
			   $reserves_a->paid_full = $total_pagado;
			   Doo::db()->update($reserves_a);
			   unset($_SESSION['codconf']);
		   }
		}else{
			 //
		}		 		
		return Doo::conf()->APP_URL . "admin/reservas";
   }
   
   public function correo($r, $r_a){
	Doo::loadModel("Reserve"); 
	Doo::loadModel("Clientes");
	$reserve = new Reserve();
	$reserve = $r;
	try {
		if($reserve->id_clientes==NULL){
			$cliente = new Clientes();
			$cliente->id = $reserve->id_clientes;
			$cliente->username = $reserve->email;
			$cliente->firstname = $reserve->firsname;
			$cliente->lastname = $reserve->lasname;
		}else{
			$cliente = new Clientes();
			$cliente->id = $reserve->id_clientes;
			$cliente = Doo::db()->find($cliente, array('limit' => 1));				
			if(empty($cliente)){
				$cliente = new Clientes();
				$cliente->id = $reserve->id_clientes;
				$cliente->username = $reserve->email;
				$cliente->firstname = $reserve->firsname;
				$cliente->lastname = $reserve->lasname;
			}else{
				$cliente = new Clientes();
				$cliente->id = $reserve->id_clientes;
				$cliente->username = $reserve->email;
				$cliente->firstname = $reserve->firsname;
				$cliente->lastname = $reserve->lasname;
			}
		}
		Doo::loadController('DatosMailController');
		$datosMail = new DatosMailController();
		$mail4 = new PHPMailer(true);
		$mail4 = $datosMail->datos();
		//Para quien va.
		if($cliente->username != ''){
		  $mail4->AddAddress($cliente->username, $cliente->firstname.' '.$cliente->lastname);	
		}
		$login = $_SESSION['login'];
		$mail4->AddAddress($login->email, $login->nombre.'('.$login->usuario.')');
		$mail4->Subject = 'Reservations Super Tours OF Orlando';
		$mail4->AltBody = 'Reservations Super Tours OF Orlando'; //El cuerpo del mensaje, puede ser con etiquetas HTML
		$mail4->MsgHTML($this->txtCorreo($r, $r_a));
		$mail4->Send();
	} catch (phpmailerException $e) {
	  	echo $e->errorMessage(); //Errores de PhpMailer
	} catch (Exception $e) {
	  	echo $e->getMessage(); //Errores de cualquier otra cosa.
	}
	return Doo::conf()->APP_URL.'admin/reservas';
   }
   
   public function txtCorreo($reserve, $reserver_a){
	    Doo::loadModel("Reserve");
		Doo::loadModel("Clientes");
		Doo::loadModel("Routes");
		Doo::loadModel("Agency");
		Doo::loadModel("PickupDropoff");		
		Doo::loadModel("Extension");
		Doo::loadModel("UserA");
		Doo::loadModel("Reservas_Agency"); 
		Doo::loadModel("Areas"); 
		//Datos del clietne;
		if($reserve->id_clientes==NULL){
			$cliente = new Clientes();
			$cliente->id = $reserve->id_clientes;
			$cliente->username = $reserve->email;
			$cliente->firstname = $reserve->firsname;
			$cliente->lastname = $reserve->lasname;
		}else{
			$cliente = new Clientes();
			$cliente->id = $reserve->id_clientes;
			$cliente = Doo::db()->find($cliente, array('limit' => 1));				
			if(empty($cliente)){
				$cliente = new Clientes();
				$cliente->id = $reserve->id_clientes;
				$cliente->username = $reserve->email;
				$cliente->firstname = $reserve->firsname;
				$cliente->lastname = $reserve->lasname;
			}
		}
		//Usuario que dio la orden de la creacion de la reserva, en case que sea de agencia.
		if($reserver_a!=NULL && $reserve->pago == 'Agency Credit Card'){
			$agencia = new Agency();
			$agencia->id = $reserve->agency;
			$agencia  = Doo::db()->find($agencia, array('limit' => 1));
			$userA = UserA();
			$userA->id = $reserver_a->id_useragency;
			$userA = Doo::db()->find($userA, array('limit' => 1));	
			if(!empty($userA)){
				$login = new Clientes();
				$login->username = $userA->email;
				$login->firstname = $userA->firstname;
				$login->lastname = $userA->lastname;
				$login->city = $agencia->city;
				$login->zipcode = $agencia->zipcode;
				$login->country = $agencia->country;
				$login->phone = $agencia->phone1;
				$login->address = $agencia->address;
				$login->state = $agencia->state;
			}else{
				$login = new Clientes();
				$login = $cliente;
			}
		}else{
			$login = new Clientes();
			$login = $cliente;
		}
		
		//Area
		$from = new Areas();
		$from->id = $reserve->fromt; 
		$to = new Areas();
		$to->id = $reserve->tot; 
		$from  = Doo::db()->find($from, array('limit' => 1));
		$to  = Doo::db()->find($to, array('limit' => 1));
		
		
		$p1 = $p2 = $d1 = $d2 = '';
		//PickupDropoff-IDA
		if($reserve->pickup1 != 0){
			$pickup1 = new PickupDropoff();	
			$pickup1->id = $reserve->pickup1;
			$pickup1  = Doo::db()->find($pickup1, array('limit' => 1));
			$p1 = $pickup1->place;
		}
		if( $reserve->dropoff1 != 0){
			$drop1 =  new PickupDropoff();
			$drop1->id = $reserve->dropoff1;
			$drop1  = Doo::db()->find($drop1, array('limit' => 1));	
			$d1 = $drop1->place;
		}
		
		//PickupDropoff-RETORNO
		if($reserve->tipo_ticket == "roundtrip"){
			if($reserve->pickup2 != 0){
				$pickup2 = new PickupDropoff();	
				$pickup2->id = $reserve->pickup2;
				$pickup2  = Doo::db()->find($pickup2, array('limit' => 1));
				$p2 = $pickup2->place;
			}
			if($reserve->dropoff2 != 0){
				$drop2 =  new PickupDropoff();	
				$drop2->id = $reserve->dropoff2;
				$drop2  = Doo::db()->find($drop2, array('limit' => 1));	
				$d2 = $drop2->place;
			}
		}
		
		
		$e1 = $e2 = $e3 = $e4= '';
		if($reserve->extension1!= 0){
			$extencion1 = new Extension();
			$extencion1->id = $reserve->extension1;
			$extencion1  = Doo::db()->find($extencion1, array('limit' => 1));
			$e1 = ' '.$extencion1->place;
		}
		if($reserve->extension2!= 0){
			$extencion2 = new Extension();
			$extencion2->id = $reserve->extension2;
			$extencion2  = Doo::db()->find($extencion2, array('limit' => 1));
			$e2 = ' '.$extencion2->place;
		}
		if($reserve->extension3!= 0){
			$extencion3 = new Extension();
			$extencion3->id = $reserve->extension3;
			$extencion3  = Doo::db()->find($extencion3, array('limit' => 1));
			$e3 = ' '.$extencion3->place;
		}
		if($reserve->extension4!= 0){
			$extencion4 = new Extension();
			$extencion4->id = $reserve->extension4;
			$extencion4  = Doo::db()->find($extencion4, array('limit' => 1));
			$e4 = ' '.$extencion4->place;
		}
		$var = explode('-',$reserve->pago);
		$tipoPago = strtoupper($var[0]);
		$otheramount = $reserve->otheramount;
		if($reserver_a != NULL){
			$pago = (   ($otheramount==0)?$reserver_a->paid_full:$otheramount   );
			$pago = number_format($pago, 2, '.',',');
		}else{
			$pago = (   ($otheramount==0)?$reserve->totaltotal:$otheramount   );
			$pago = number_format($pago, 2, '.',',');
		}
		
		
		$conten = "<head>
				<title>Documento sin título</title>
				<style type='text/css'>
				#clearTable {
					width: 800px;
					font-size: 13px;
					font-family: Verdana, Geneva, sans-serif;
				}
				#clearTable tr #titletd3 {
					font-family: Verdana, Geneva, sans-serif;
				}
				#clearTable tr #titletd2 {
					font-size: 20px;
				}
				#clearTable tr td p {
					text-align: center;
				}
				
				#content #center-column #tdgris {
					background-color: #F0F0F0;
				}
				#content #center-column #tdrojo {
					background-color: #FFE6E6;
				}
				#content #center-column1 #titletd {
					background-color: #F5EDEB;
					padding-left: 5px;
					font-size: 12px;
				}
				 #titlett {
					background-color: #E8E8E8;
					padding-left: 5px;
					font-size: 12px;
				}
				 #titlell {
					padding-left: 5px;
					font-size: 12px;
					border-bottom-width: 1px;
					border-left-width: 1px;
					border-bottom-style: solid;
					border-left-style: solid;
					border-bottom-color: #E6E6E6;
					border-left-color: #E6E6E6;
				}
				#titlelp {
					padding-left: 5px;
					font-size: 12px;
					border-bottom-width: 1px;
					border-bottom-style: solid;
					border-bottom-color: #E6E6E6;
				}
				 #titlelr {
					padding-left: 5px;
					font-size: 12px;
					border-top-width: 1px;
					border-top-style: solid;
					border-top-color: #CE0000;
					color: #CE0000;
				}
				 #tdgristable {
					background-color: #FFF;
					padding-left: 5px;
				}
				</style></head>
		<div align='center'>
			<br />
			<table   id='clearTable'> 
				<tr>
				   <td width='316' height='33' rowspan='2' id='titletd3'><img src='https://www.supertours.com/Logo-Supertours-mail.jpg' width='316' height='88' /></td>
					   <td colspan='3' align='center' id='titletd3'>Supertours.com</td>
					 </tr>
					 <tr>
					   <td height='35' colspan='3' id='titletd4'>Date/Time of Booking: " .date('M-d-Y',strtotime($reserve->fecha_ini)) . " / " . date('g:i:a',strtotime($reserve->hora)). "</td>
					</tr>
					 <tr>
					   <td align='center' height='33' colspan='4' id='titletd2'>" . $reserve->tipo_ticket . " E-TICKET</td>
					 </tr>
					 <tr>
					   <td height='15' id='titletd6'>LEAD TRAVELER: " . $cliente->firstname . " " . $cliente->lastname . " </td>
					   <td width='145' height='15' id='titletd6'>&nbsp;</td>
					   <td colspan='2' id='titletd6'>AD : " . $reserve->pax2 . "<strong>  </strong>CHD : " . $reserve->pax2 . " <strong> TOTAL</strong> : " . ($reserve->pax+$reserve->pax2) . "</td>
					 </tr>
				  <tr>
				   <td height='16' id='titletd7'>&nbsp;</td>
				   <td height='16' id='titletd7'>Status: CONFIRMED</td>
				   <td width='197' height='16' id='titletd7'>Confirmation # " . $reserve->codconf . "</td>
				   <td width='122' height='16' id='titletd7'>Paid by: " . $reserve->tipo_pago . "</td>
				 </tr>
				 <tr>
				<td height='45' colspan='4' id='titletd'> <p><strong>ORDER&nbsp;  CONFIRMATION</strong> + " . $reserve->tipo_ticket  . " </p></td>
			  </tr>
	  <tr>
		<td colspan='4' ><table width='90%' height='125' id='tableorder'>
		  <tr>
			<td  width='40%' height='35' id='titlett'  ><strong>Departure Date: </strong>" . date('l', strtotime($reserve->fecha_salida )) . ", " . date('M-d-Y', strtotime($reserve->fecha_salida)) . "  </td>
			<td  id='titlett' width='26%'><strong>TRIP # :</strong> " . $reserve->trip_no . "</td>
			<td  id='titlett' width='40%'><strong>DEPARTURE TIME :</strong> " . date('g:i a', strtotime($reserve->deptime1)) . "</td>
		  </tr>
      <tr>
        <td height='41'><strong>From :</strong> " . $from->nombre  . "</td>
        <td colspan='2'><strong>Pick up Point / Extensions :</strong> " . $p1. $e1."</td>
      </tr>
      <tr>
        <td height='39'><strong>To </strong>:" . $to->nombre . "</td>
        <td colspan='2'><strong>Drop Off / Extensions :</strong> " .  $d1. $e2."</td>
        </tr>
  </table>
	";
	if($reserve->tipo_ticket == "roundtrip"){
	$conten .="<table id='tableorder' width='90%'>
			  <tr>
				<td id='titlett'  width='34%' height='35'  ><strong> Return Date :</strong> " . date('l', strtotime($reserve->fecha_retorno)) . ", " . date('M-d-Y', strtotime($reserve->fecha_retorno)) . "  , </td>
				<td id='titlett' width='26%'><strong>TRIP # :</strong> " . $reserve->trip_no2 . "</td>
				<td id='titlett' width='40%'><strong>DEPARTURE TIME :</strong> " . date('g:i a', strtotime($reserve->deptime2)) . "</td>
			  </tr>
			  <tr>
				<td height='28'><strong>From :</strong> " . $to->nombre . "</td>
				<td colspan='2'><strong>Pick up Point / Extensions :</strong> " .  $d2. $e3."</td>
			  </tr>
			  <tr>
				<td height='27'><strong>To :</strong>" . $from->nombre . "</td>
				<td colspan='2'><strong>Drop Off / Extensions :</strong> " . $p2  .  $e4."</td>
				</tr>
			</table>";
	}
	$conten .="
	  <table id='tableorder2' width='90%'>
      <tr>
        <td  align='center' height='35' id='titlett2'  >Please print and present this e-ticket to board the bus<br />
          Please arrive at departure point 30 minutes before the scheduled time</td>
        </tr>
    </table>";

  //Recibo
  if($reserver_a == NULL){
     $conten .=
   "
    <table id='tableorder3' width='90%'>
      <tr>
        <td id='titlett'   height='35' colspan='4' id='titlett3'  aling='center' ><strong>RECEIPT</strong></td>
        </tr>
      <tr>
        <td width='34%' height='28'>Card Holder Information</td>
        <td colspan='2'>Billing Address </td>
      </tr>
      <tr>
        <td height='27'>Name : " . $cliente->firstname  . " </td>
        <td colspan='2'>Address : " . $cliente->address . "</td>
		 <td colspan='2'>Phone : " . $cliente->phone . "</td>
      </tr>
      <tr>
        <td height='27'>Last Name : " . $cliente->lastname  . "</td>
        <td colspan='2'>City : " . $cliente->city . "</td>
      </tr>
      <tr>
        <td height='27'>E-mail : " . $cliente->username . "</td>
        <td>State : " . $cliente->state . "</td>
        <td>Country :" . $cliente->country . "</td>
      </tr>
    </table>";
	
	}else{
		echo  $conten .= "
   <table id='tableorder3' width='90%'>
      <tr>
        <td  height='35' colspan='3' id='titlett3'  aling='center' >RECEIPT</td>
        </tr>
      <tr>
        <td width='34%' height='28'>Card Holder Information</td>
        <td colspan='2'>Billing Address </td>
      </tr>
      <tr>
        <td height='27'>Name : " . $login->firstname  . " </td>
        <td colspan='2'>Address : " . $login->address . "</td>
		 <td colspan='2'>Phone : " . $login->phone . "</td>
      </tr>
      <tr>
        <td height='27'>Last Name : " . $login->lastname  . "</td>
        <td colspan='2'>City : " . $login->city . "</td>
      </tr>
      <tr>
        <td height='27'>E-mail : " . $cliente->username . "</td>
        <td>State : " . $login->state . "</td>
        <td>Country :" . $login->country . "</td>
      </tr>
    </table>";
	}
	$conten .= "
    <p><br />
  </p></td>
  </tr>
  <tr>
    <td height='33' colspan='4' id='titletd' >&nbsp;</td>
  </tr>
  <tr>
    <td colspan='4'><table width='90%' border='0' cellpadding='3' id='tableorder'>
      <tr>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td  id='titlelr' align='center' colspan='2'> " . $tipoPago  . "</td>
        <td id='titlelr'><strong>$  " .$pago. " </strong></td>
      </tr>
    </table>
      <p>&nbsp;</p>
    <p>Non-refundable - non-transferable - no changes are allowed on dates or time of departure - no pets allowed on board -<br />
      luggage restrictions apply - Please read the terms of transportation at www.supertours.com<br />
      THANK YOU FOR CHOOSING US<br />
      HAVE A NICE TRIP<br />
      SUPER TOURS OF ORLANDO,Inc. 5419 International Drive, Orlando Fl. 32819<br />
      Phone: (407) 370-3001 / U.S.A. TOLL FREE 1-800-251-4206 / reservations@supertours.com
    
    </p></td>
  </tr>
  <tr>
    <td colspan='4' align='center'> <p align='center' class='titulopago'> 
    
</p>       </td>

  </tr>
  </table>
</div>";
		return $conten;
   }
   
  
   
   public function registrar_pago($reserve, $r_anterior, $login){
		//Reserve_pago
		Doo::loadModel("Reserve_Pago");
		$pagor_r = new Reserve_Pago();
		$pagor_r->id_reserva = $reserve->id;
		$pagor_r->pago = $reserve->pago;
		$pagor_r->tipo_pago = $reserve->tipo_pago;
		$pagor_r->pagado = ($reserve->otheramount==0)?$reserve->totaltotal:$reserve->otheramount;
		$pagor_r->usuario = $login->id;
		$pagor_r->fecha = date('Y-m-d H:s');
		Doo::loadModel("Agency");
		if($reserve->agency != -1){
			$dat = new Agency();
			$dat->id = $reserve->agency;
			$dat = Doo::db()->find($dat, array('limit' => 1));
		}else{
			$dat = new Agency();
			$dat->id = -1;
			$dat->type_rate = 0;
		}
		
		if($r_anterior == NULL){
			Doo::db()->insert($pagor_r);
			  //CREDITO
		   if($pagor_r->tipo_pago  == 'VOUCHER'){// Actualizamos el credio
		   		$creditos = Doo::db()->find("Acredito", array("where" => "id_agency_account = ? and disponible > 0","param" => array($dat->id),"limit" => 1));
				if(!empty($creditos)){
					$creditos->disponible = ($creditos->disponible - $_SESSION['booking']["totaltotal"]); 	
					Doo::db()->update($creditos);
				}
			}		
		}else{
			$sql = "SELECT `id`, `id_reserva`, `pago`, `tipo_pago`, `pagado`, `usuario`, `fecha` 
						FROM `reservas_pago` 
						WHERE  id_reserva = ? 
						ORDER BY  `id` DESC ";
			$rs = Doo::db()->query($sql, array($pagor_r->id_reserva));
			$pagos = $rs->fetchAll();	
			
			if(!empty($pagos)){
				//echo ' de ('.$r_anterior->tipo_pago.') a ('.$reserve->tipo_pago.')';
				$pagos = new Reserve_Pago($pagos[0]);
				if($r_anterior->tipo_pago == $reserve->tipo_pago && $r_anterior->totaltotal==$reserve->totaltotal && $r_anterior->otheramount==$reserve->otheramount){
					// Solo si se cambia el pago y si se modifica el valor se insertan los pagos
				}else if($r_anterior->tipo_pago == $reserve->tipo_pago && ($reserve->tipo_pago == 'COLLECT ON BOARD' || $reserve->tipo_pago == 'VOUCHER')){
					//echo '<br />De COLLECT ON BOARD a COLLECT ON BOARD o VOUCHER a VOUCHER';
					$pagor_r->id = $pagos->id;
					Doo::db()->update($pagor_r);
				}else if(($r_anterior->tipo_pago=='PRED-PAID' && $reserve->tipo_pago=='PRED-PAID') || 
						($r_anterior->tipo_pago=='PRED-PAID' && $reserve->tipo_pago == 'COLLECT ON BOARD') ){
					//echo '<br />De PRED-PAID a PRED-PAID o PRED-PAID a COLLECT ON BOARD';
					$pagado = $this->pagado($pagor_r->id_reserva);
					$debe = $pagor_r->pagado - $pagado;
					if($debe>0){
						$pagor_r->pagado = $debe;
						Doo::db()->insert($pagor_r);	
					}else{
						$this->registrarNotaCredito($pagor_r->id_reserva , ($debe*-1));
					}
					
				}else if($r_anterior->tipo_pago == 'COLLECT ON BOARD' && $reserve->tipo_pago=='PRED-PAID'){
					//echo '<br /> COLLECT a PRED-PAID';
					$pagado = $this->pagado($pagor_r->id_reserva );
					$debe = $pagor_r->pagado - $pagado;
					$pagor_r->pagado = $debe;
					Doo::db()->insert($pagor_r);
				}
			}
		 }	
   }
   
   public function registrarNotaCredito($id_reserva, $valor){
	  if($valor>0){
	  	Doo::loadModel("Reserve_Nota_Credi"); 
		$login = $_SESSION['login'];
	  	$notaC = new Reserve_Nota_Credi();
		$notaC->id_reserva = $id_reserva;
		$notaC = Doo::db()->find($notaC,array("limit",1)); 
		if(empty($notaC)){
			$notaC = new Reserve_Nota_Credi();
			$notaC->id_reserva = $id_reserva;
			$notaC->valor	= $valor;
			$notaC->usuario = $login->id;
			$notaC->fecha = date('Y-m-d H:s');
			Doo::db()->insert($notaC);	
		}else{
			$notaC = new Reserve_Nota_Credi($notaC[0]);
			$notaC->id_reserva = $id_reserva;
			$notaC->valor	= $valor;
			$notaC->usuario = $login->id;
			$notaC->fecha = date('Y-m-d H:s');
			Doo::db()->update($notaC);
		}
	  }
	  
   }
   
   public function pagado($id_reserva){
	   $sql = "SELECT SUM(`pagado`) as total
				FROM `reservas_pago` 
				WHERE  id_reserva = ? AND tipo_pago = ? 
				ORDER BY  `id` DESC ";
		$rs = Doo::db()->query($sql, array($id_reserva, 'PRED-PAID'));
		$pagos = $rs->fetchAll();
		$pagado = isset($pagos[0]['total'])?$pagos[0]['total']:0;
		return $pagado;
   }
   
    public function save(){
      
        Doo::loadModel("Clientes");

        $cliente = new Clientes($_POST);
        
        $new = false;
      
        if ($_POST['id'] == "") {
            $cliente->id = Null;
            $new = true;
        }

        $this->data['rootUrl'] = Doo::conf()->APP_URL;
        
        if ($new)
           Doo::db()->insert($cliente);
        else
           Doo::db()->update($cliente);

         return Doo::conf()->APP_URL . "admin/clientes";
                
    }
    
    public function edit() {
        Doo::loadModel("Clientes");
        $cliente = new Clientes();
        $cliente->id = $this->params["pindex"];
        $this->data['rootUrl'] = Doo::conf()->APP_URL;
        $this->data['cliente']        = Doo::db()->find($cliente, array('limit' => 1));
		$this->data['state']  = Doo::db()->find("State",array("select name from State" ,"asArray" => true));
		$this->data['country']  = Doo::db()->find("Country",array("select name from Country" ,"asArray" => true));
        $this->data['content'] = 'configuracion/frm_client.php';
        $this->view()->renderc('admin/index', $this->data);
    }
	
	

    public function delete() {
        Doo::loadModel("Clientes");
        $cliente = new Clientes();
        $cliente->id = $_REQUEST['item'];
        Doo::db()->delete($cliente);
        return Doo::conf()->APP_URL . "admin/clientes";
    }
	
	/*
	 * AUSU jQuery-Ajax Autosuggest v1.0
	 * Demo of a simple server-side request handler
	 * Note: This is a very cumbersome code and should only be used as an example
	 */

public function ajaxcliente(){

	    # Assign local variables
		$id     =   @$_POST['id'];          // The id of the input that submitted the request.
		$data   =   @$_POST['data'];        // The value of the textbox.
		$id_agency = @$_POST['id_a']; 
		$id_from1 = @$_POST['id_from1'];
		$id_to1 = @$_POST['id_to1'];
		$id_from2 = @$_POST['id_from2'];
		$id_to2 = @$_POST['id_to2'];
		$id_exten1 = @$_POST['id_exten1'];
		$id_exten2 = @$_POST['id_exten2'];
		$id_exten3 = @$_POST['id_exten3'];
		$id_exten4 = @$_POST['id_exten4'];
		if ($id && $data)
		{
			
			if ($id=='leader'){    
				echo "<script>
						client = document.getElementById('newClient');
						client.style.visibility = 'hidden';
					 </script>";
				$sql = "SELECT id,username,firstname,lastname,phone
							FROM clientes 
                            WHERE lastname LIKE ? or firstname LIKE ? or username LIKE ?   LIMIT 5 ";
				$rs = Doo::db()->query( $sql, array('%'.$data.'%','%'.$data.'%','%'.$data.'%') );
			    $consulta = $rs->fetchAll();
				$dataList = array();
				foreach($consulta as $consul){
					$tel = '';
					$toReturn   = strtoupper($consul['lastname']." ".$consul['firstname'] ."-".$consul['phone']." - ". $consul['username']) ;
					$dataList[] = '<li  id="' .$consul['id'] . '"><a >' . htmlentities($toReturn) . '</a></li>';
				}
				if (count($dataList)>=1)
				{
					$dataOutput = join("\r\n", $dataList);
					echo "<ul style='width:420px;'>";
					echo $dataOutput;
					echo "</ul>";
				}else{	
					echo "<script>								
								client = document.getElementById('newClient');
								client.style.visibility = 'visible';
						 </script>";
					echo "<ul style='width:396px;'><li><a >No Results</a></li></ul>";
				}
			}
			else if($id=='agency'){
				 $sql = "SELECT  id,company_name
				 			FROM agencia
							WHERE company_name LIKE ?  LIMIT 5  ";
			     $rs = Doo::db()->query($sql, array('%'.$data.'%'));
			     $consulta = $rs->fetchAll();
				 $dataList = array();
				foreach($consulta as $consul){
					$toReturn   = $consul['company_name'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				
				}
				if (count($dataList)>=1){
					$dataOutput = join("\r\n", $dataList);
					 echo '<ul style="width:200px;">';
					echo $dataOutput;
					echo "</ul>";
				}else{
					echo '<ul style="width:200px;"><li><a >No Results</a></li></ul>';
					
					echo "<script>
					document.getElementById('tableTypeSaldo').style.display = 'none';
					
					</script>";
					
					echo "<script>document.getElementById('type_rate').value= '0';
								var comi = 0;
								$('#totalComision').text(comi.toFixed(2));
						</script>";
				}
			}else if($id=='uagency'){
				$sql = "SELECT  id,firstname, lastname
							FROM user_agencia
						WHERE firstname LIKE ? and id_agencia = ?  LIMIT 5  ";
				$rs = Doo::db()->query($sql, array('%'.$data.'%',$id_agency));
				$consulta = $rs->fetchAll();
				$dataList = array();
				foreach($consulta as $consul){
					$toReturn   = $consul['firstname'].' '.$consul['lastname'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				}
		      
			    
				if (count($dataList)>=1){
					$dataOutput = join("\r\n", $dataList);
					echo '<ul style="width:200px;">';
					echo $dataOutput;
					echo "</ul>";
				}else{
					$dataList[] = '<li id="-1"  ><a >No Results</a></li>';
					$dataOutput = join("\r\n", $dataList);
					echo '<ul style="width:200px;">';
					echo $dataOutput;
					echo "</ul>";
				}
			}
			
			elseif($id=='pickup1'){
					
						$rs = Doo::db()->query("SELECT  id,id_area,place,address
 
														FROM pickup_dropoff
															
										  WHERE (place LIKE ? or   address LIKE ?) 
										  and id_area = ? and valid = 0 AND type_web  = 0 LIMIT 5  ", 
                                array('%'.$data.'%','%'.$data.'%',$id_from1));
								
			      $consulta = $rs->fetchAll();
				  $dataList = array();
					foreach($consulta as $consul){
					$toReturn   = $consul['place']. " ". $consul['address'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				
				}
		      
			    
				if (count($dataList)>=1)
				{
					$dataOutput = join("\r\n", $dataList);
					 echo '<ul style="width:300px;">';
					echo $dataOutput;
					echo "</ul>";
				}
				else
				{
					echo '<ul style="width:300px;"><li><a >No Results</a></li></ul>';
				}
				
			
			
			}
			
			elseif($id=='dropoff1'){
					
						$rs = Doo::db()->query("SELECT  id,id_area,place,address
 
														FROM pickup_dropoff
															
										  WHERE (place LIKE ? or  address LIKE ?) and id_area = ? 
										  and valid = 0  AND type_web  = 0  LIMIT 5  ", 
                                array('%'.$data.'%','%'.$data.'%',$id_to1));
				  				  				
			      $consulta = $rs->fetchAll();
				  $dataList = array();
					foreach($consulta as $consul)
				{
					$toReturn   = $consul['place']. " ". $consul['address'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				
				}
		      
			    
				if (count($dataList)>=1)
				{
					$dataOutput = join("\r\n", $dataList);
					 echo '<ul style="width:300px;">';
					echo $dataOutput;
					echo "</ul>";
				}
				else
				{
					echo '<ul style="width:300px;"><li><a >No Results</a></li></ul>';
				}
				
			
			
			}
			elseif($id=='exten1'){
					
						$rs = Doo::db()->query("SELECT id,id_extension,place,address FROM pickupdropoff_exten
															
										  WHERE (place LIKE ? or  address LIKE ?) and id_extension = ? LIMIT 5  ", 
                                array('%'.$data.'%','%'.$data.'%',$id_exten1));
				  				  				
			      $consulta = $rs->fetchAll();
				  $dataList = array();
					foreach($consulta as $consul)
				{
					$toReturn   = $consul['place']. " ". $consul['address'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				
				}
		      
			    
				if (count($dataList)>=1)
				{
					$dataOutput = join("\r\n", $dataList);
					 echo '<ul style="width:300px;">';
					echo $dataOutput;
					echo "</ul>";
				}
				else
				{
					echo '<ul style="width:300px;"><li><a >No Results</a></li></ul>';
				}
				
			
			
			}
			elseif($id=='exten2'){
					
						$rs = Doo::db()->query("SELECT id,id_extension,place,address FROM pickupdropoff_exten
															
										  WHERE (place LIKE ? or  address LIKE ?) and id_extension = ? LIMIT 5  ", 
                                array('%'.$data.'%','%'.$data.'%',$id_exten2));
				  				  				
			      $consulta = $rs->fetchAll();
				  $dataList = array();
					foreach($consulta as $consul)
				{
					$toReturn   = $consul['place']. " ". $consul['address'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				
				}
		      
			    
				if (count($dataList)>=1)
				{
					$dataOutput = join("\r\n", $dataList);
					 echo '<ul style="width:300px;">';
					echo $dataOutput;
					echo "</ul>";
				}
				else
				{
					echo '<ul style="width:300px;"><li><a >No Results</a></li></ul>';
				}
				
			
			
			}
			elseif($id=='pickup2'){
					
						$rs = Doo::db()->query("SELECT  id,id_area,place,address
 
														FROM pickup_dropoff
															
										  WHERE (place LIKE ? or   address LIKE ?) and id_area = ? 
										  and valid = 0  AND type_web  = 0  LIMIT 5  ", 
                                array('%'.$data.'%','%'.$data.'%',$id_from2));
								
			      $consulta = $rs->fetchAll();
				  $dataList = array();
					foreach($consulta as $consul)
				{
					$toReturn   = $consul['place']. " ". $consul['address'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				
				}
		      
			    
				if (count($dataList)>=1)
				{
					$dataOutput = join("\r\n", $dataList);
					 echo '<ul style="width:300px;">';
					echo $dataOutput;
					echo "</ul>";
				}
				else
				{
					echo '<ul style="width:300px;"><li><a >No Results</a></li></ul>';
				}
				
			
			
			}
			
			elseif($id=='dropoff2'){
					
						$rs = Doo::db()->query("SELECT  id,id_area,place,address
 
														FROM pickup_dropoff
															
										  WHERE (place LIKE ? or  address LIKE ?) and id_area = ? and valid = 0
										  AND type_web  = 0  LIMIT 5  ", 
                                array('%'.$data.'%','%'.$data.'%',$id_to2));
				  				  				
			      $consulta = $rs->fetchAll();
				  $dataList = array();
					foreach($consulta as $consul)
				{
					$toReturn   = $consul['place']. " ". $consul['address'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				
				}
		      
			    
				if (count($dataList)>=1)
				{
					$dataOutput = join("\r\n", $dataList);
					 echo '<ul style="width:300px;">';
					echo $dataOutput;
					echo "</ul>";
				}
				else
				{
					echo '<ul style="width:300px;"><li><a >No Results</a></li></ul>';
				}
				
			
			
			}
			elseif($id=='exten3'){
					
						$rs = Doo::db()->query("SELECT id,id_extension,place,address FROM pickupdropoff_exten
															
										  WHERE (place LIKE ? or  address LIKE ?) and id_extension = ? LIMIT 5  ", 
                                array('%'.$data.'%','%'.$data.'%',$id_exten3));
				  				  				
			      $consulta = $rs->fetchAll();
				  $dataList = array();
					foreach($consulta as $consul)
				{
					$toReturn   = $consul['place']. " ". $consul['address'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				
				}
		      
			    
				if (count($dataList)>=1)
				{
					$dataOutput = join("\r\n", $dataList);
					 echo '<ul style="width:300px;">';
					echo $dataOutput;
					echo "</ul>";
				}
				else
				{
					echo '<ul style="width:300px;"><li><a >No Results</a></li></ul>';
				}
				
			
			
			}
			elseif($id=='exten4'){
					
						$rs = Doo::db()->query("SELECT id,id_extension,place,address FROM pickupdropoff_exten
															
										  WHERE (place LIKE ? or  address LIKE ?) and id_extension = ? LIMIT 5  ", 
                                array('%'.$data.'%','%'.$data.'%',$id_exten4));
				
				  $consulta = $rs->fetchAll();
				  $dataList = array();
					foreach($consulta as $consul)
				{
					$toReturn   = $consul['place']. " ". $consul['address'];
					$dataList[] = '<li  id="' .$consul['id'] . '" ><a >' . htmlentities($toReturn) . '</a></li>';
				
				}
		      
			    
				if (count($dataList)>=1)
				{
					$dataOutput = join("\r\n", $dataList);
					 echo '<ul style="width:300px;">';
					echo $dataOutput;
					echo "</ul>";
				}
				else
				{
					echo '<ul style="width:300px;"><li><a >No Results</a></li></ul>';
				}
				
			
			
			}
		
		}
		else
		{
			echo 'Request Error';
		}
	}
	
	public function clienteAptoPagoWeb($cliente){
		if(empty($cliente)){
			return 0;
		}
		if(trim($cliente['username']) == '' || trim($cliente['firstname']) == '' || trim($cliente['lastname']) == ''|| trim($cliente['phone']) == ''|| trim($cliente['zip']) == ''|| trim($cliente['address']) == ''){
			return 0;
		}
		if( trim($cliente['state']) == '' && trim($cliente['country']) == '' ){
			return 0;
		}
		return 1;
	}
	
	public function ajaxcliente2(){
	
				$id = $this->params["id"];
				$pertenece = $this->params["id2"];
				
				if($pertenece == 'leader'){
					$sql = "SELECT `id`, `username`, `firstname`, `lastname`, `password`, `phone`, `celphone`, `city`, `state`, `country`, `address`, `zip`, `tipo_client`, `birthday`, `fecha_r`, `points`, `left_points`, `paid_points` FROM  clientes WHERE id = ? ";
					$rs = Doo::db()->query($sql, array($id));
					$datos = $rs->fetch();
					$apto = $this->clienteAptoPagoWeb($datos);
					//$apto = 1;
					
				echo "<script> 
				
				  client = document.getElementById('newClient');
				  client.style.visibility = 'hidden';
				  
				  $('#idCliente').val('".$datos['id']."')
				  $('#firstname1').val('".$datos['firstname']."');
				  $('#lastname1').val('".$datos['lastname']."');
				  $('#phone1').val('".$datos['phone']."');
				  $('#email1').val('".$datos['username']."');
				  $('#type_cliente').val('".$datos['tipo_client']."');
				  $('#cliente_apto').val('".$apto."');
				  $('#idPagador').val('".$datos['id']."');
				  
				
					 </script>";
					 
				}
				if($pertenece == 'agency'){
					if(trim($id) == '' || trim($id) == 0){
						$id = -1;
					}
					if($id!=-1){
						$rs = Doo::db()->query("SELECT acount,opcion1,opcion2,opcion3,opcion4,opcion5,days
												   FROM agency_account WHERE id_agencia = ? ", 
													array($id));
						
						
						Doo::loadController("AgenciaController");
						$agenControl = new AgenciaController();
						$disponible = $agenControl->credito($id);

						$datos = $rs->fetch();
						
						$sql2 = "SELECT type_rate FROM  `agencia` WHERE id = ?";
						$rs = Doo::db()->query($sql2, array($id));
						$type= $rs->fetch();
						$type_rate = $type['type_rate'];
						if($type_rate==1){
							echo "<script>
								$('#tr_agencycomision').css('display','none');
								</script>";
						}else{
								echo "<script>
								$('#tr_agencycomision').css('display','block');
								</script>";
						}
						
						echo "<script>document.getElementById('type_rate').value= '".$type_rate."';
								var comi = comision();
								$('#totalComision').text(comi.toFixed(2));
						</script>";
						
						
						echo "<script>$('#uagency').removeAttr('disabled');</script>";
						echo "<script>				
						document.getElementById('tableTypeSaldo').style.display = 'block';</script>";
						
						if($datos['opcion1'] != 0){
							echo "<script>
							$('#opcion_pago_passager').html('Passanger Credit Card');
							document.getElementById('tipo_passager').style.display = 'block';
							</script>";
							
							echo "<script>
							
							document.getElementById('tipo_agency').style.display = 'block';
							</script>";
						}else{
							
							echo "<script>
							$('#opcion_pago_passager').html('Credi Car');
							document.getElementById('tipo_passager').style.display = 'none';</script>";
							echo "<script>document.getElementById('tipo_agency').style.display = 'none';</script>";
						}
						
						if($datos['opcion3'] != 0){
							echo "<script>
							document.getElementById('tipo_CrediFee').style.display = 'block';
							</script>";
						}else{
							echo "<script>
							document.getElementById('tipo_CrediFee').style.display = 'none';
							</script>";
							
						}
						
						if($datos['opcion4'] != 0){
							echo "<script>
								document.getElementById('tipo_Cash').style.display = 'block';
							</script>";
						}else{
							echo "<script>
							document.getElementById('tipo_Cash').style.display = 'none';
							</script>";
						}
						
						
						
						if($datos['opcion5'] != 0){
							echo "<script>
								document.getElementById('tipo_Voucher').style.display = 'block';
							</script>";
							
							Doo::loadController("AgenciaController");
							$agenControl = new AgenciaController();
							$disponible = $agenControl->credito($id);					
							echo "<script>$('#uagency').removeAttr('disabled');
								document.getElementById('disponible').value = '".$disponible."';
							</script>";
						}else{
							echo "<script>document.getElementById('tipo_Voucher').style.display = 'none';</script>";
							echo "<script>$('#uagency').removeAttr('disabled');
								document.getElementById('disponible').value = '0';
							</script>";
						}
						echo '<script>
							$("#tr_otheramount").css("display","block");
						</script>';
						
						
						echo "<script>
								$('#tipo_predpaid_cash').css('display','none');
								$('#label_tipo_predpaid_cash').html('Cash at agency');
								
						</script>";
						echo "<script>
								$('#tr_complementary').css('display','none');
								$('#label_tipo_predpaid_cash').html('Cash at agency');
								
						</script>";
						
					}else{
						echo "<script>
								$('#id_agency').val('-1');
							</script>";
						
						echo "<script>
								$('#tr_complementary').css('display','block');
								$('#label_tipo_predpaid_cash').html('Cash at agency');
								
						</script>";
						echo "<script>
							$('#opcion_pago_passager').html('Credi Car');
							document.getElementById('tipo_passager').style.display = 'block';</script>";
						echo "<script>document.getElementById('tipo_agency').style.display = 'none';</script>";
						
						echo "<script>
								document.getElementById('tipo_Cash').style.display = 'block';
							</script>";
						echo "<script>
							document.getElementById('tipo_CrediFee').style.display = 'block';
							</script>";
						echo "<script>
								document.getElementById('tipo_Voucher').style.display = 'none';
						</script>";
						echo "<script>
						document.getElementById('tableTypeSaldo').style.display = 'none';
						</script>";
						
						echo "<script>document.getElementById('type_rate').value= '0';
									var comi = 0;
									$('#totalComision').text(comi.toFixed(2));
							</script>";
						echo "<script>
								$('#tr_otheramount').css('display','none');
								$('#tr_agencycomision').css('display','none');
								
						</script>";
						
						echo "<script>
								$('#tipo_predpaid_cash').css('display','block');
								$('#label_tipo_predpaid_cash').html('Cash in terminal');
								
						</script>";
						
						
					}
				}
	
	}
 
	public function trips(){
	
	if(isset($this->params["from"]) && isset($this->params["to"]) && isset($this->params["fecha"])){
				$from = $this->params["from"];
				$to = $this->params["to"];
				$fecha_salida = $this->params["fecha"]; 
				$anno = substr($fecha_salida,-4);
				$resident = $this->params["resid"];
				$tipo = $this->params["tipo"];
				$id_agency = $this->params["agency"];
				list($mes, $dia, $anio) = explode('-', $fecha_salida);
				$fecha = $anio.'-'.$mes.'-'.$dia; 
			
				Doo::loadModel("Agency");
				 
				if($id_agency!=-1){
	    			$dat = new Agency();
					$dat->id = $id_agency;
					$result = Doo::db()->find($dat ,array("limit",1));
					if(!empty($result )){
						$dat = $result[0];	
					}else{
						$dat = new Agency();
						$dat->id = -1;
						$dat->type_rate = 0;
					}				
				}else{
					$dat = new Agency();
 					$dat->id = -1;
					$dat->type_rate = 0;
				}
																		
				$fromto = $this->params["fromto"]; 
				
				$hora = date("H:i");
				
				
				
				$sql = "select 
                              t1.trip_no,
                              t2.id,
                              t1.fecha, 
                              t4.nombre as trip_from, 
                              t5.nombre as trip_to, 
                              t2.price, 
                              t2.price2,
							  t2.price3,
							  t2.price4, 
                              t2.trip_departure, 
                              t2.trip_arrival,
                              t3.equipment,
                             t1.estado 
                         from programacion t1
                         left join routes t2 on (t1.trip_no = t2.trip_no)
                         left join trips  t3 on (t1.trip_no = t3.trip_no)
                         left join areas  t4 on (t2.trip_from = t4.id)
                         left join areas  t5 on  (t2.trip_to  = t5.id)
                         where t2.type_rate = ".$dat->type_rate." and t2.trip_from = ? AND t2.trip_to = ? and fecha = ? AND t2.trip_departure > '' and t1.estado = '1' and t2.anno = ? ORDER BY t2.trip_departure ASC";
						 
			$rs = Doo::db()->query($sql, array($from, $to, $fecha_salida,$anno)); 
			$salida = $rs->fetchAll(); // Salidas
			
			if($dat->type_rate==1){ // Salidas Especial Net
				$sqlNet = "select 
								  t1.trip_no,
								  t2.id,
								  t1.fecha, 
								  t4.nombre as trip_from, 
								  t5.nombre as trip_to, 
								  t2.price, 
								  t2.price2,
								  t2.price3,
								  t2.price4, 
								  t2.trip_departure, 
								  t2.trip_arrival,
								  t3.equipment,
								 t1.estado 
							 from programacion t1
							 left join routes_net t2 on (t1.trip_no = t2.trip_no)
							 left join trips  t3 on (t1.trip_no = t3.trip_no)
							 left join areas  t4 on (t2.trip_from = t4.id)
							 left join areas  t5 on  (t2.trip_to  = t5.id)
							 where t2.type_rate = 2 and t2.trip_from = ? AND t2.trip_to = ? and fecha = ? AND t2.trip_departure > '' and t1.estado = '1' and t2.anno = ? ORDER BY t2.trip_departure ASC";
							 
				$rs = Doo::db()->query($sqlNet, array($from, $to, $fecha_salida, $anno)); 
				$sEspNet = $rs->fetchAll();
			}else{
				$sEspNet = array();
			}
			if(!empty($sEspNet)){// Si encontro especiales los remplazamos
				foreach ($salida as $key => $normal) {
	 			  foreach ($sEspNet as $key => $especial) {
						 if ($especial["trip_no"] == $normal["trip_no"]){
						    $salida[$key] = $especial;
						}
					}
				}
			}
			
			
			$sql = "SELECT  nombre FROM areas WHERE id = ?";
			         $rs = Doo::db()->query($sql, array($from)); 
					 $from = $rs->fetch();
			$sql = "SELECT  nombre FROM areas WHERE id = ?";
			         $rs = Doo::db()->query($sql, array($to)); 
					 $to = $rs->fetch();
			
			echo "<style type='text/css'>
.selector {
	-moz-box-shadow:inset 0px 1px 0px 0px #ffffff;
	-webkit-box-shadow:inset 0px 1px 0px 0px #ffffff;
	box-shadow:inset 0px 1px 0px 0px #ffffff;
	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #ededed), color-stop(1, #dfdfdf) );
	background:-moz-linear-gradient( center top, #ededed 5%, #dfdfdf 100% );
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ededed', endColorstr='#dfdfdf');
	background-color:#ededed;
	-moz-border-radius:6px;
	-webkit-border-radius:6px;
	border-radius:6px;
	border:1px solid #dcdcdc;
	display:inline-block;
	color:#777777;
	font-family:arial;
	font-size:11px;
	font-weight:bold;
	padding:6px 20px;
	text-decoration:none;
	text-shadow:1px 1px 0px #ffffff;
}.selector:hover {
	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #dfdfdf), color-stop(1, #ededed) );
	background:-moz-linear-gradient( center top, #dfdfdf 5%, #ededed 100% );
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#dfdfdf', endColorstr='#ededed');
	background-color:#dfdfdf;
	cursor:pointer;
}.selector:active {
	position:relative;
	top:1px;
}





/* This imageless css button was generated by CSSButtonGenerator.com */
</style>";
				
				
				
			/*echo '<form name="formu" id="formu" action="'.Doo::conf()->APP_URL.'admin/reservas/add" method="post"><input name="resident" type="hidden" value="'.$resident.'" /><input name="fromto" type="hidden" value="'.$fromto.'" />';*/
			echo '<form name="formu" id="formu"  method="post"><input name="resident" type="hidden" value="'.$resident.'" /><input name="fromto" type="hidden" value="'.$fromto.'" />';
			echo '<b style="padding-bottom:10px;"> <font color="#666666" face="Verdana, Arial, Helvetica, sans-serif" >'.$from['nombre']. ' To '.$to['nombre'].'</font></b>' ;
					
		         echo '   <table class="table table-bordered table-striped" id="tbl1">
             <thead>
                 <tr>
                     <th width="8%">Select</th>
                     <th width="8%">Trip</th>
                     <th width="12%">Departure</th>
                     <th width="11%">Arrive</th>
                     <th width="20%">'.($resident == '1'?'FLA. Resident Adult':'Regular Price Adult').'</th>
                     <th width="20%">'.($resident == '1'?'FLA. Resident Child (3-9 Yrs)':'Regular Price Child').'</th>
                     <th width="20%">Equipment</th> 
					 <th width="20%">Seats</th>             					  
                 </tr>
             </thead>';
			 
			 
               if (count($salida) > 0){
			   $i = 0;
			    Doo::loadController("MainController");
				   $main = new MainController();
				   list($mes, $dia, $anio) = explode('-', $fecha_salida);
				   $fecha = $anio.'-'.$mes.'-'.$dia; 
               foreach($salida as $e):
				  $disponible = $this->disponible($e['trip_no'], $fecha);
				  $enUso = $this->puestosEnUsados($e['trip_no'], $fecha);
				  //Validamos disponible para cuando se esta editando
				  if(isset($_SESSION['reserva_edit'])){
					  Doo::loadModel("Reserve");
					  $r = new Reserve($_SESSION['reserva_edit']);
					  if($tipo==1 && $r->trip_no==$e['trip_no']){
						  $disponible += ($r->pax + $r->pax2);
					  }
					  if($tipo==2 && $r->trip_no2==$e['trip_no']){
						  $disponible += ($r->pax + $r->pax2);
					  }
				  }
				  if($enUso != 0){
					  $disponible = $disponible - $enUso;
					  $tituloDisponible = 'There are '.$enUso.' other seats that are being used by another operator';
				  }else{
					  $tituloDisponible = '';
				  }
				  if( !($fecha == date('Y-m-d') && date("H:i",strtotime($e['trip_departure'])) < date('H:i')) ){
					 echo '<tr class="row'.$i.'">  
						<td><input type="radio" name="trip1" id="trip1"  value="'.$e['id'].'" />
						<input name="fecha" type="hidden" value="'.$fecha_salida.'" />
						<input type="hidden" name="trip"  id="trip" value="'.$e['trip_no'].'" />
						<input type="hidden" name="capacidad_trip_'.$e['trip_no'].'"  id="capacidad_trip_'.$e['trip_no'].'" value="'.$disponible.'" />
						</td>
						<td>'.$e['trip_no'].'</td>
						<td>'.date("g:i a",strtotime($e['trip_departure'])).'</td>
						<td>'.date("g:i a",strtotime($e['trip_arrival'])).'</td>
						<td>'.($resident == '1' ? $e['price4'] : $e['price'] ).'</td>
						<td>'.($resident == '1' ? $e['price3'] : $e['price2'] ).'</td>
						<td>'.$e['equipment'].'</td>
						<td title="'.$tituloDisponible.'" >'.$disponible.'</td>
					</tr>';
				   $i = 1 - $i;
			   }
                 endforeach; 
               } else {
            
             echo '<tr>
                  <td colspan="7">No tours available</td> 
              </tr>  ';
            } 
        echo ' </table>';
		
		$inpu = 'input[name="trip1"]';
		
		echo '  <p align="right">
         <button  class="selector" id="btn-continue" >Select</button> <button  class="selector" id="btn-cancelar" >cancel</button>
       </p>
	   
	  	   
		<div id="con">
		<script>
		
		
		
		$(document).ready(function() {
				
			$("#btn-continue").click(function(){
				var index = false;		
			 for(i=0;i<$("#tbl1 tr").toArray().length;i++) {
				if($("#tbl1 tr").eq(i).find("td").eq(0).find("input").attr("checked")){
					valor = $("#tbl1 tr").eq(i).find("td").eq(1).html();
					departure = $("#tbl1 tr").eq(i).find("td").eq(2).html();
					arrival = $("#tbl1 tr").eq(i).find("td").eq(3).html();
					adult = $("#tbl1 tr").eq(i).find("td").eq(4).html();
					child = $("#tbl1 tr").eq(i).find("td").eq(5).html();
					index=true;
					}
				}			
			
			
			if(index){
				    var capacidad = $("#capacidad_trip_"+valor).val();
					var totalpax = parseFloat( parseFloat($("#pax").val()) +  parseFloat($("#pax2").val()) );
					if(capacidad-totalpax<0){
						alert("There is no capacity available for passengers in total admitted");
						return false;
					}
					var id = $("#trip").val();
					var tipo = "'.$tipo.'";
					$("#CargaTrip").load("'.Doo::conf()->APP_URL.'admin/reservas/add/trip/" + valor + "/"+tipo);
					$("#puestosEnUso").load("'.Doo::conf()->APP_URL.'admin/reservas/ocuparPuesto/"+valor+"/"+tipo+"/"+"'.$fecha.'"+"/"+totalpax+"/1");
                                        $("#mensajeTrip").load("'.Doo::conf()->APP_URL.'admin/reservas/consultatrip");
					
					paxA = $("#pax").val();
					paxC = $("#pax2").val();
					
					
					if("'.$tipo.'" == 1){
						adulto1 = adult;
						ninio1 = child;						
						
						$("#trip_no").val(valor);
						$("#departure1").val(departure);
						$("#arrival1").val(arrival);											
						$("#subtochild1").val(child);
						$("#subtoadult1").val(adult);
						CalcularTotalTotal();
						$("#trip_no2").val("");
						$("#departure2").val("");
						$("#arrival2").val("");		
					}else{
						if($("#trip_no2").val() != ""){								
							total = 0;
							sta = 0;
							stc = 0;
							ad = 0;
							ch = 0;
						}else{	
							$("#trip_no2").val(valor);
							$("#departure2").val(departure);
							$("#arrival2").val(arrival);															
						}
						$("#subtochild2").val(child);
						$("#subtoadult2").val(adult);
						CalcularTotalTotal();
					}				
					 
					 $("#mascaraP").hide("fade");					 
					 $("#popup").hide("fade");
					 
					 return false;
			}else{
					alert("select Trip"); 
                    return false;
			}
				   
				
			});
		
		$("#btn-cancelar").click(function(){
							
				$("#popup").fadeOut("slow");
				$("#popup").hide("fade");
					 
				$("#mascaraP").fadeOut("slow");
				$("#mascaraP").hide("fade");									 
					 
				 return false;
		});
		
		});
		
		
		function calcularPrecios(ad,ch){

								
						//hace la suma de los precios( Line Transportation ) escogidos desde la ventana de trips					
						var transAdult = $("#transporadult").text(); //obtiene el valor del texto del spam (transporadult) y lo convierte en float						
						var transChild = $("#transporechil").text(); //obtiene el valor del texto del spam (transporechil) y lo convierte en float						
												
						//alert(" TransAdult convertido a float: " + parseFloat(transAdult.substring(1,transAdult.length)));
						
						ad = (parseFloat(ad) + (parseFloat(transAdult.substring(1,transAdult.length)))); //convierte la variable adult en float y la suma con transAdult
						ch = (parseFloat(ch) + (parseFloat(transChild.substring(1,transChild.length)))); //convierte la variable child en float y la suma con transAdult
										
					
						$("#transporadult").text("$"+ad.toFixed(2)); //la funcion toFixed muestra los dos decimales despues del entero
						$("#transporechil").text("$"+ch.toFixed(2));
							
											
						 sta = $("#extenadult").text();
						 stc = $("#extenchil").text();						
												
						if($("#extenadult").text() == ""){ sta = ad;} 
						if($("#extenchil").text() == ""){stc = ch;}
												
						
						
						if($("#extenadult").text() != "" || $("#extenchil").text() != ""){
							
							sta = parseFloat(sta.substring(1,sta.length)) + parseFloat(ad);
							stc = parseFloat(stc.substring(1,sta.length)) + parseFloat(ch);
							
						 }						 
						 
						total = sta + stc;		 
						
						 
						$("#subtoadult").html("$"+sta.toFixed(2));
						$("#subtochild").html("$"+stc.toFixed(2));
						 
					
						var subtotalAdult = sta * parseFloat(paxA);	
						var subtotalChild = stc * parseFloat(paxC);
						var totalpagar = subtotalAdult + subtotalChild;
						$("#totaltotal").html("$"+ totalpagar.toFixed(2));	
						$("#totalPagar").text(totalpagar.toFixed(2));
						$("#totalPagar2").text(totalpagar.toFixed(2));
		
		}
		
		</script></div>
		
		</form>';
		}
	}
	
	
	
	
	
	
	
	public function superclub(){
	
	   $id = $this->params["id"];
	   
	   $sql = "SELECT id,points,left_points,paid_points FROM clientes WHERE id = ? AND tipo_client = 1";
	   
	   $rs = Doo::db()->query($sql,array($id)); 
	   $datos = $rs->fetch();
	   if(!empty($datos)){
	    echo "<script>$('#number_supu').html('".$datos['id']."'); $('#points').html('".$datos['left_points']."'); </script>";
	      }
		  else{
		  echo "<script>$('#number_supu').html('N/A'); $('#points').html('N/A'); </script>";
		  }
	}
	
	public function extenprice(){
	
	    $id = $this->params["id"];
		$id2 = $this->params["id2"];
		$transAdult = $this->params["transAdult"];
		$transChild = $this->params["transChild"];
		$type_rate = $this->params["type_rate"];
		if( $type_rate == 0){
			$sql = "SELECT precio FROM extension WHERE id = ?";	
		}else{
			$sql = "SELECT	precio_neto as precio FROM extension WHERE id = ?";
		}
		
	    $rs = Doo::db()->query($sql,array($id)); 
		$datos = $rs->fetch();
			$precio =  $datos['precio'];
			if(empty($datos)){
				$precio = 0;
			}
			 if($id == 0){
				 $precio = 0;
			 } 
			 echo "<script>
				    $('#price_exten0".$id2."').val('".$precio."');
				  	CalcularTotalTotal();
			</script>";
		 
		 }
	public function SelectTrip(){
		$id = $this->params ['id'];
		$tipo = $this->params ['tipo'];
		Doo::loadController('MainController');
		$main = new MainController();
		$comision = $main->cal_equipament($id);
		if($tipo==1){
			if($id == 0){
				echo "<script> $('#valorcomision01').val('0');</script>";
			}else{
				echo "<script> $('#valorcomision01').val('".$comision."');</script>";
			}
		}else if($tipo == 2){
			if($id == 0){
				echo "<script> $('#valorcomision02').val('0');</script>";
			}else{
				echo "<script> $('#valorcomision02').val('".$comision."');</script>";
			}
		}
	}
	
	
	
	public function detalles_rastro(){
		
		
		Doo::loadModel("Reserve_Rastro"); 
		$id = $this->params["id"];
		$rastro = new Reserve_Rastro();
		$rastro->id = $id;
		$rastro = Doo::db()->find($rastro, array('limit' => 1));
		
		$array = $this->crearArray($rastro->detalles);
		
		echo '<div><p>THE <strong>'.$rastro->tipo_cambio.'</strong> performed by an <strong>'.$rastro->tipo_usuario.'</strong>.</p>
		<strong>The result was as follows:<strong><br />';
		
		if($rastro->tipo_cambio=='CREATE'){
			echo '
				  <br />Creation date: '.date('M-d-Y',strtotime($array['fecha_ini'])).
				   ( isset($array['hora'])? ('  '.date('h:i A',strtotime($array['hora'])) ) :'').'
			      <br />Type : '.$array['tipo_ticket'].
				  ( ($array['id_tours']=='' || $array['id_tours']==-1 || $array['id_tours']==0)?'':('  '.$array['type_tour'] ) ).'			
				  <br />Trip 01 : '.$array['trip_no'].'
				  <br />Trip 01 : '.$array['trip_no'];
				  
				  if($array['tipo_ticket']=='roundtrip'){
					  echo '<br />Trip 02 : '.$array['trip_no2'];
				  }
				  echo '<br />Total Price: $'.$array['totaltotal'].'				
			';
		}else{
			foreach($array as $key => $val){
				echo '<br />'.$key.' = '.$val;
			}
		}
		echo '</div>';
	}
	
	public function rastro_reserva($tipo_cambio, $r_anterior, $r_nueva, $login){
	   Doo::loadModel("Reserve_Rastro"); 
	   $rastro = new Reserve_Rastro();
	   $array_nueva = (array)  $r_nueva;
	   $id_reserva = $array_nueva['id'];
	   unset($array_nueva['_table']);
	   unset($array_nueva['_primarykey']);
	   unset($array_nueva['_fields']);
	   if($r_anterior == NULL){
		   $cambios = $array_nueva;
	   }else{
		   $array_anterior = (array)  $r_anterior;
		   unset($array_anterior['_table']);
		   unset($array_anterior['_primarykey']);
		   unset($array_anterior['_fields']);
		   $cambios = $this->buscarCambios($array_anterior, $array_nueva);
	   }
	   if(count($cambios)>0){
		   $rastro->id_reserva = $id_reserva;
		   $rastro->tipo_cambio = $tipo_cambio;
		   $rastro->detalles = $this->cadena_array($cambios);
		   $rastro->fecha = date('Y-m-d H:i:s');
		   $rastro->usuario = $login->id;
		   $rastro->tipo_usuario =$login->tipo;
		   Doo::db()->insert($rastro);  
	   }
   }
	
	 public function cadena_array($array){
	   $cadena = "";
	   foreach($array as $key => $val){
		   $cadena .= '['.$key.']=>'.$val.'&->&';
	   }
	   return $cadena;
	}
	
	public function buscarCambios($array1, $array2){
		$cambios = array();
		foreach($array2 as $key => $v){
			if(isset($array1[$key]) && trim($array1[$key]) != trim($array2[$key])){
				$cambios[$key] = $v;
			}
		}
		return $cambios;
	}
	
	public function crearArray($string){
		$array = explode('&->&',$string);
		$datos = array();
		for($i = 0; $i<count($array); $i++){
			 $cadena = $array[$i];
			 $separador = ']=>';
			 $tam = strlen($cadena);
			 $index = -1;
			 if( strpos($cadena,$separador) !== false ){
				 for($j = 0; $j<$tam; $j++){
					 $aux = substr($cadena,$j,3);
					 if($aux == $separador){
						 $index = $j;
					 }else{

					 }
				 }
			 }
			 if($index != -1){
				$key = substr($cadena,1, $index-1);
				$valor = substr($cadena,$index+3, $tam);
				$datos[$key] = $valor;
			 }
		}
		return $datos;
	}
	
	public function precioTrip($trip, $from, $to, $fecha, $agencia){
//            echo $trip.' .... ' .$from.'....'.$to.' .... '.$fecha.' .... '.$agencia->id;
//            if(!$trip == 100 && !$from == 1 && !$to =3 && !$fecha = '10-01-2013' ){
//                exit;
//            }
		$anno = substr($fecha,-4);
		$sql = "select 
                              t1.trip_no,
                              t2.id,
                              t1.fecha, 
                              t4.nombre as trip_from, 
                              t5.nombre as trip_to, 
                              t2.price, 
                              t2.price2,
							  t2.price3,
							  t2.price4, 
                              t2.trip_departure, 
                              t2.trip_arrival,
                              t3.equipment,
                             t1.estado 
                         from programacion t1
                         left join routes t2 on (t1.trip_no = t2.trip_no)
                         left join trips  t3 on (t1.trip_no = t3.trip_no)
                         left join areas  t4 on (t2.trip_from = t4.id)
                         left join areas  t5 on  (t2.trip_to  = t5.id)
                         WHERE  t1.trip_no = ? AND t2.trip_from = ? AND t2.trip_to = ? and fecha = ? AND t2.trip_departure > '' and t1.estado = '1' and t2.anno = ? AND t2.type_rate = ? 
						 ORDER BY t2.trip_departure ASC";
						 
			$rs = Doo::db()->query($sql, array($trip, $from, $to, $fecha, $anno, $agencia->type_rate)); 
			$salida = $rs->fetchAll(); // Salidas
			
			if( $agencia->type_rate==1){ // Salidas Especial Net
				$sqlNet = "select 
								  t1.trip_no,
								  t2.id,
								  t1.fecha, 
								  t4.nombre as trip_from, 
								  t5.nombre as trip_to, 
								  t2.price, 
								  t2.price2,
								  t2.price3,
								  t2.price4, 
								  t2.trip_departure, 
								  t2.trip_arrival,
								  t3.equipment,
								 t1.estado 
							 from programacion t1
							 left join routes_net t2 on (t1.trip_no = t2.trip_no)
							 left join trips  t3 on (t1.trip_no = t3.trip_no)
							 left join areas  t4 on (t2.trip_from = t4.id)
							 left join areas  t5 on  (t2.trip_to  = t5.id)
							 WHERE t1.trip_no = ? AND t2.trip_from = ? AND t2.trip_to = ? and fecha = ? AND t2.trip_departure > '' and t1.estado = '1' and t2.anno = ? AND t2.type_rate = 2 AND t2.id_agency = ?
							 ORDER BY t2.trip_departure ASC";
							 
				$rs = Doo::db()->query($sqlNet, array($trip, $from, $to, $fecha, $anno, $agencia->id)); 
				$sEspNet = $rs->fetchAll();
			}else{
				$sEspNet = array();
			}
			if(!empty($sEspNet)){// Si encontro especiales los remplazamos
				foreach ($salida as $key => $normal) {
	 			  foreach ($sEspNet as $key => $especial) {
						 if ($especial["trip_no"] == $normal["trip_no"]){
						    $salida[$key] = $especial;
						}
					}
				}
			}
			return (!empty($salida))?$salida[0]:array();
	}
	
	 public function comision_trip($trip){
          Doo::loadModel("Trips"); 
          $trip1 = ($trip=="EXPRESS MINIBUS")?"EXPRESS SERVICES":$trip;  
          $tripss = Doo::db()->find("Trips", array("select"=>"equipment","where" => "trip_no = ?","param" => array($trip1),"limit" => 1));
		  if(empty($tripss)){
			  $age_comis = array();  
		  }else{
			  Doo::loadModel("Agencomi"); 
          $age_comis = Doo::db()->find("Agencomi", array("where" => "service = ?","param" => array($tripss->equipment),"limit" => 1));
		  }
	  if(!empty($age_comis))
            return $age_comis->comision;
          else
            return 0;
    }
	
	public function tripsEstados(){
		Doo::loadModel("Trips"); 
		$trips = new Trips();
		$trips = Doo::db()->find($trips);
		//print_r($trips);
		echo '
				<div id="datagrid">
				<table class="grid2" cellspacing="1" id="grid2">
				 <thead>
				   <tr>
					<td></td>
					';
		foreach($trips as $t){
			    
				echo '<td>'.$t->trip_no.'</td>';
			}
		echo '  </tr>
				 </thead>
				 <tbody> ';
		$fecha = new DateTime();
		for($i=0; $i<5; $i++){
			echo '<tr>
					<td>'.$fecha->format("M-d").'</td>';
					foreach($trips as $t){
						$diponible = $this->disponible($t->trip_no,$fecha->format("Y-m-d"));
						$capacidad = $this->capacidad_trip($t->trip_no);
						$porcentaje = ($diponible/$capacidad)*100;
						if($porcentaje>70){
							$color  = '#77CAF7';
						}else if($porcentaje>35){
							$color ='#F9DE75';
						}else if($porcentaje > 0){
							$color = '#FF8B35';
						}else {
							$color = '#CE0000';
						}
						echo '<td class="td_hover" style="font-size:14px;" bgcolor="'.$color.'" title="'.number_format($porcentaje,0,'.','.').'% is available" align="center">'.$diponible.'</td>';
					}			
			echo '</tr>';
			date_add($fecha, date_interval_create_from_date_string('1 days'));
		}
		echo '</tbody></table></div>';
	}
	
	public function capacidad_trip($trip_no){
		$sqlC = "SELECT sum(b.capacidad) as capacidad 
					FROM  trips t  
							LEFT JOIN  `bus_trips` tb  on (t.id = tb.id_trips )
							LEFT JOIN  `bus` b  on (tb.id_bus=b.id) 
					WHERE t.trip_no= ?";
        $rs = Doo::db()->query($sqlC, array($trip_no));
        $trip_bus = $rs->fetchAll();
		$capacidad = $trip_bus[0]['capacidad'];
		
		$capacidad = ($capacidad!=0)?$capacidad:0;
		return $capacidad;
	}
	
	public function disponible($trip_no, $fecha){
		//tipo = 1 -> De Ida
		//tipo = 2 -> De Retorno
		$capacidad = $this->capacidad_trip($trip_no);
		if($capacidad==0){// No esta disponible
			return -1;
		}
		//De Ida
		$sqlIda = "SELECT (sum(pax) + sum(pax2))as ocupadas 
				FROM  `reservas` 
				Where trip_no = ? AND fecha_salida	 = ? AND estado != 'QUOTE' ";
		$rs = Doo::db()->query($sqlIda, array($trip_no, $fecha));
		$r_idas = $rs->fetchAll();
		$ocupadas_idas = $r_idas[0]['ocupadas']?$r_idas[0]['ocupadas']:0;
		//De Retorno
		$sqlRetunr = "SELECT (sum(pax) + sum(pax2))as ocupadas 
				FROM  `reservas` 
				Where trip_no2 = ? AND fecha_retorno = ? AND estado != 'QUOTE'";
		$rs = Doo::db()->query($sqlRetunr, array($trip_no, $fecha));
		$r_return = $rs->fetchAll();
		$ocupadas_return= $r_return[0]['ocupadas']?$r_return[0]['ocupadas']:0;
		
		$ocupadas = $ocupadas_idas+$ocupadas_return;
		return $capacidad-$ocupadas;
		
	}
	
	public function puestosEnUsados($trip, $fecha){
		Doo::loadModel('Reservas_trip_puestos');
		$puestos = new Reservas_trip_puestos();
		$login = $_SESSION['login'];	
		$sql = "SELECT `id`, `trip_to`, `tipo`,`fecha_trip`, `cantidad`, `fecha_usado`, `usuario`, `estado` FROM `reservas_trip_puestos` WHERE usuario != ? AND trip_to = ? AND fecha_trip = ? AND (estado='USING' OR estado='RENEWED') order by (id) DESC";
		$rs = Doo::db()->query($sql, array($login->id,  $trip, $fecha));
		$aux = $rs->fetchAll();
		$ahora = date('Y-m-d H:i:s');
		$enUso = 0;
		foreach($aux as $p){
			$fe = $p['fecha_usado'];
			$segundos = strtotime($ahora)-strtotime($fe);
			$diferencia_dias= ($segundos/60);
			if($diferencia_dias<6){
				$enUso += $p['cantidad'];
			}
		}
		return $enUso;
	}
	public function ocuparPuesto(){
		///:trip/:fecha/:cantidad/:opcion

		if(isset($this->params["trip"]) && isset($this->params["tipo"]) &&  isset($this->params["fecha"]) && isset($this->params["cantidad"]) && isset($this->params["opcion"])){ 
			Doo::loadModel('Reservas_trip_puestos');
			$puestos = new Reservas_trip_puestos();
			$puestos->trip_to = $this->params["trip"];
			$puestos->fecha_trip = $this->params["fecha"];
			$puestos->cantidad = $this->params["cantidad"];
			$puestos->tipo = $this->params["tipo"];
			$login = $_SESSION['login'];	
			$puestos->usuario = $login->id;
			 /*Estados:
			 	1: USING: Puesto que acabo de ser usado por el usuario.
				2: RENEWED: Puesto q se estaba usando, pero se vencio el tiempo y volvio a renovarlo.
				3: RESERVED: Puesto que se estaba usando y se convirtio en una reserva.
				4: CANCELLED: Puesto que se estaba usando pero no se siguo con la reseva.
				5: SUSPENDED: Puesto que el usuario comenzo a usar pero lo perdio debido al tiempo.
			 */
			$sql = "SELECT `id`, `trip_to`, `tipo`,`fecha_trip`, `cantidad`, `fecha_usado`, `usuario`, `estado` FROM `reservas_trip_puestos` WHERE usuario = ? AND tipo = ? AND (estado='USING' OR estado='RENEWED') order by (id) DESC";
			$rs = Doo::db()->query($sql, array($login->id,  $this->params["tipo"]));
			$aux = $rs->fetchAll();
			if(!empty($aux)){
				$fe = $aux[0]['fecha_usado'];
				$ahora = date('Y-m-d H:i:s');
				$segundos = strtotime($ahora)-strtotime($fe);
				$diferencia_dias= ($segundos/60);
				if($diferencia_dias>5){
					$aux = array();	
				}
			}
			$opcion = $this->params["opcion"];
			if(!empty($aux)){
				switch ($opcion) {
					case 1:
					$estado = 'USING';
					$puestos->fecha_usado = date('Y-m-d H:i:s');
					break;
					case 2:
					$estado = 'RENEWED';
					$puestos->fecha_usado = date('Y-m-d H:i:s');	
					break;
					case 3:
					$estado = 'RESERVED';
					break;
					case 4:
					$estado = 'CANCELLED';
					break;
					case 5:
					$estado = 'SUSPENDED';
					break;
				}
				$puestos->id = $aux[0]['id'];
				$puestos->estado = $estado;
                                echo '<script>
                                       
					var hilo02=setInterval("estadoTrip()",1000);
				</script>';
				Doo::db()->update($puestos);

			}else{
				$puestos->estado = 'USING';
				$puestos->fecha_usado = date('Y-m-d H:i:s');
                                echo '<script>
                                        
					var hilo02=setInterval("estadoTrip()",1000);
				</script>';
				Doo::db()->insert($puestos);	
			}
			
                         
		}
	}
	
	public function actualiarPuestosUsuario($opcion){
		$estado = 'SUSPENDED';
			switch ($opcion) {
				case 1:
				$estado = 'USING';
				break;
				case 2:
				$estado = 'RENEWED';
				break;
				case 3:
				$estado = 'RESERVED';
				break;
				case 4:
				$estado = 'CANCELLED';
				break;
				case 5:
				$estado = 'SUSPENDED';
				break;
			}
			$login = $_SESSION['login'];	
			if($opcion == 2){
				$sql = ' UPDATE `reservas_trip_puestos` SET `fecha_usado`= ? , `estado`= ? 
						WHERE usuario = ? AND (estado="USING" OR estado="RENEWED")';
				$rs = Doo::db()->query($sql, array(date('Y-m-d H:i:s'), $estado, $login->id));
			}else{
				$sql = 'UPDATE  `reservas_trip_puestos` SET  `estado` =  "'.$estado.'" 
						WHERE usuario = ? AND (estado="USING" OR estado="RENEWED")';
				$rs = Doo::db()->query($sql, array($login->id));
			}
	}
	
	public function ocuparPuestoUsuario(){
		if(isset($this->params["opcion"])){
			$opcion = $this->params["opcion"];
			$this->actualiarPuestosUsuario($opcion);
		}
	}
	
	public function consultatrip(){
		$login = $_SESSION['login'];	
		$sql = "SELECT `id`, `trip_to`, `tipo`,`fecha_trip`, `cantidad`, `fecha_usado`, `usuario`, `estado` FROM `reservas_trip_puestos` WHERE usuario = ? AND (estado='USING' OR estado='RENEWED') order by (id) DESC";
		$rs = Doo::db()->query($sql, array($login->id));
		$aux = $rs->fetchAll();
                 if(!empty($aux)){
			$fe = $aux[0]['fecha_usado'];
			$ahora = date('Y-m-d H:i:s');
			$segundos = strtotime($ahora)-strtotime($fe);
			$limite = $this->limiteTiempo();
			if($segundos<=$limite){
				$temp0 =  $this->temporizador($limite,$segundos);
			}else{
				$temp0 = '00:00';
			}
                        echo '<script>$("#mensajeTrip").html("'.$temp0.'");</script>';

			$mensaje = 'More than $limite minutes has the following entries in use:<br />';
			foreach($aux as $p){
				if(date("Y-m-d",strtotime($p['fecha_usado'])) == date("Y-m-d")){
					$mensaje .= '       '.$p['cantidad'].' aciento of '.$p['trip_to'].' for the day trip '.date('M-d-Y',strtotime($p['fecha_trip'])).'<br />';
				}
			}
			$mensaje .='<br /><br />Do you want to continue with the booking?';
			$tiempoEspera = 30;
			
			if($segundos>$limite){
				echo '<script>
						if(!$("#dialog-trip-pregunta").is(":visible")){ 							
							$("#mensaje_trips_pregunta").html("'.$mensaje.'");
							preguntaTrip();
						}
				</script>';
				echo $temp2 = $this->temporizador($tiempoEspera,$segundos-$limite);
				echo '<script> 
					$("#reloj_temporizador").html("'.$temp2.'");
				</script>';
			}
			
			//Tiempo de espera para ocultar dialog-trip-pregunta
			if($segundos>$limite+$tiempoEspera){
				$this->actualiarPuestosUsuario(5);
				echo '<script>
					location.reload();
					$("#reloj_temporizador").html("'.$temp2.'");
					$( "#dialog-trip-pregunta" ).dialog( "close" );
				</script>';
			}
			
		}
	}
	
	public function temporizador($tiempo, $consumido){
		$tempo =  date('i:s', strtotime('Y-m-d') + ($tiempo - $consumido));
		return $tempo;
	}
	
	public function limiteTiempo(){
		$min = 5;//5 minutos
		$seg = $min*60;
		return $seg;
	}
	
	public function types_payments(){
		return $op = array("1"=>array("PRED-PAID" => "Agency Credit Card"),
                    "2"=>array("PRED-PAID" => 'Passenger Credit Card'),
                    "3"=>array("COLLECT ON BOARD" => "Credit Card+ 4 % FEE"),
                    "4"=>array("COLLECT ON BOARD" => "Cash"),
                    "5"=>array("VOUCHER" => "Credit Voucher"),
					"6"=>array("PRED-PAID" => "Cash in terminal"),
					"7"=>array("FREE SERVICES" => "Complementary")
		);
	}
	
	public function codigoConf($tipo){
		if($tipo == 1){//Pago
			$prefijo = 'R';
		}else{//Cotizacion
			$prefijo = 'QR';
		}
		do{ 
		   $mes = date("m"); 
		   $dia = date("d"); 
		   $y = date("y"); 					 
		   $code = $prefijo. $y.$mes.$dia. rand(0, 999); 
		   $a = $this->db()->find('Reserve', array('where' => 'codconf = ?',
					 'limit' => 1,
					 'select' => 'codconf',
					 'param' => array($code)
					 )
		   );
	  }while($a != null);
	  return $code;
	}
	

}

?>