<?php/** * Description of TripsController * * */Doo::loadController('I18nController');class Admin_ratesController extends I18nController {    public function beforeRun($resource, $action) {        if (!isset($_SESSION['login'])) {            return Doo::conf()->APP_URL;        }    }    public function index() {        // Cargamos el paginador        Doo::loadHelper('DooPager');                                              //exit();        if (!isset($_POST["filtro"])) {            if (!isset($this->params['filtro'])) {                $filtro = "gp.nombre";                                //echo $filtro;            } else {                $filtro = $this->params['filtro'];            }        } else {            $filtro = $_POST["filtro"];            //$filtro = $this->params['filtro'];        }        if (!isset($_POST["type_rate"])) {            if (!isset($this->params['type_rate'])) {                $type_rate = "1";            } else {                $type_rate = $this->params['type_rate'];            }        } else {            $type_rate = $_POST["type_rate"];        }        if (!isset($_POST["texto"])) {            if (!isset($this->params['texto'])) {                $texto1 = "";                $texto  = str_replace("%20"," ",$texto1);                //echo $texto;                                           } else {                $texto1 = $this->params['texto'];                $texto  = str_replace("%20"," ",$texto1);                //echo $texto;                                                           }        } else {            $texto1 = $_POST["texto"];            $texto  = str_replace("%20"," ",$texto1);                               }             //$texto = "SEA WORLD";        //        if (trim($texto) != '') {//            //            $texto .='%';//           //        }//        if ($filtro == 'gp.nombre') {//            $filtro = "gp.nombre";//            $texto = str_replace("%20"," ",$texto1);//        }        $counter1 = "select count(*) as total from (                        select apt.id, apt.adults, apt.child, apt.adults1, apt.child1, apt.annio, apt.fecha_ini, apt.fecha_fin, p.nombre as parque, gp.nombre as grupo                        from admin_parques_tarifa as apt                        left join parques as p on (apt.id_parque = p.id)                        left join grupo_parques as gp on (apt.id_grupo = gp.id)                     where apt.type_rate = ? and $filtro like ?) as salida;";        $counter2 = "select count(*) as total from (                        select apt.id, apt.adults, apt.child, apt.adults1, apt.child1, apt.annio, apt.fecha_ini, apt.fecha_fin, p.nombre as parque, gp.nombre as grupo                        from admin_parques_tarifa as apt                        left join parques as p on (apt.id_parque = p.id)                        left join grupo_parques as gp on (apt.id_grupo = gp.id)                        left join agencia as a on (apt.id_agency = a.id)                     where apt.type_rate = 2 and $filtro like ?) as salida;";        if ($type_rate == 2) {            $q2 = Doo::db()->query($counter2, array($texto.'%'));            $rs = $q2->fetchAll();        } else {            $q1 = Doo::db()->query($counter1, array($type_rate, $texto.'%'));            $rs = $q1->fetchAll();            //print_r($rs);        }//       $rs    = Doo::db()->find("Admision_rates", array("select"=>"COUNT(*) AS total",////          "where" => "$filtro like ?",////          "limit"=>1,////          "param" => array('%' . $texto . '%')////          ));         $total = $rs[0]['total'];                        if ($total == 0)            $total = 1;        // iniciamos el paginador        $pager = new DooPager(Doo::conf()->APP_URL . "admin/tours/admision-rate/$type_rate/$filtro/$texto/page", $total, 11, 5);        if (isset($this->params['pindex']))            $pager->paginate(intval($this->params['pindex']));        else            $pager->paginate(1);                /* $rs = Doo::db()->query("SELECT t1.id,t1.adults,t1.child,t1.cantidad,t2.nombre AS grupo,t3.nombre AS parque, t1.company_name, t1.annio          FROM admin_parques_tarifa t1          LEFT JOIN grupo_parques t2 ON (t1.id_grupo = t2.id )          LEFT JOIN parques t3 ON (t1.id_parque = t3.id)          where type_rate = ? AND t1.$filtro like ?  order by t1.annio DESC limit $pager->limit ",          array($type_rate, $texto.'%')); */        //apt.id_grupo ='$filtro' AND                //echo $type_rate;        if ($type_rate == 1) {            $sql1 = "select apt.id, apt.cantidad, apt.adults, apt.child, apt.adults1, apt.child1,  apt.annio, apt.fecha_ini, apt.fecha_fin, p.nombre as parque, gp.nombre as grupo                        from admin_parques_tarifa as apt                        left join parques as p on (apt.id_parque = p.id)                        left join grupo_parques as gp on (apt.id_grupo = gp.id)                     where apt.inicio > '2018-01-01' AND apt.type_rate = ? AND  $filtro like ? order by apt.id_grupo ASC, p.nombre DESC, apt.inicio DESC, apt.fin DESC, apt.cantidad DESC limit $pager->limit";            $q = Doo::db()->query($sql1, array($type_rate,$texto.'%'));                    } else if ($type_rate == 2) {            $sql2 = "select apt.id, apt.cantidad , apt.adults, apt.child, apt.adults1, apt.child1,  apt.annio, apt.fecha_ini, apt.fecha_fin, p.nombre as parque, gp.nombre as grupo, a.company_name                        from admin_parques_tarifa as apt                        left join parques as p on (apt.id_parque = p.id)                        left join grupo_parques as gp on (apt.id_grupo = gp.id)                        left join agencia as a on (apt.id_agency = a.id)                     where apt.inicio > '2018-01-01 AND  apt.type_rate = 2 AND $filtro like ? order by   apt.id_grupo ASC, p.nombre DESC, apt.inicio DESC, apt.fin DESC, apt.cantidad DESC limit $pager->limit";            $q = Doo::db()->query($sql2, array($texto.'%'));                   }        $admin_rates = $q->fetchAll();                                    $this->data['rootUrl'] = Doo::conf()->APP_URL;        $this->data['content'] = 'configuracion/admin_rates.php';        $this->data['filtro'] = $filtro;        $this->data['texto'] = $texto;        $this->data['type_rate'] = $type_rate;        //$this->data['admin_rates'] = $admin_rates;        //$this->data['pager'] = $pager->output;        $this->renderc('admin/index', $this->data, true);                                                      }        public function cargar_grupos() {        //        echo "aqui";//        //        $texto = $this->params['texto'];//        //        echo $texto;//            }        public function add() {                Doo::loadModel("Admision_rates");        $admision_rates = new Admision_rates();        //        $grupo = $this->params["grupo"];//        //        echo $grupo;        if (!isset($_POST["type_rate"])) {            if (!isset($this->params['type_rate'])) {                $type_rate = "1";            } else {                $type_rate = $this->params['type_rate'];            }        } else {            $type_rate = $_POST["type_rate"];        }        $admision_rates->type_rate = $type_rate;        $admision_rates->id_agency = -1;        $this->data['rootUrl'] = Doo::conf()->APP_URL;        $this->data['type_rate'] = $type_rate;        $this->data['admision_rates'] = Doo::db()->find($admision_rates, array('limit' => 1));        $this->data['grupos'] = Doo::db()->find("Grupo_parque", array("asArray" => true));        $this->data['parques'] = Doo::db()->find("Parques", array("asArray" => true));        $this->data['admision_rates'] = $admision_rates;        $this->data['content'] = 'configuracion/frm_admin_rates.php';        $this->data['dato'] = "New";        $this->renderc('admin/index', $this->data);    }    public function save() {                Doo::loadModel("Admision_rates");            Doo::loadModel("Parques");         Doo::loadModel("Parques_restric");       	                $annios = $_POST['annio'];        $dato = $_POST['dato'];        $nuevoannio = strtotime('+1 year', strtotime($annios));        $nuevaannio1 = date('Y', $nuevoannio);                $ad = $_POST['adults'];        $ch = $_POST['child'];        $ad1 = $_POST['adults1'];        $ch1 = $_POST['child1'];        $id_grupo = $_POST['grupale'];        $id_parque = $_POST['id_parque'];                $id_agency = $_POST['id_agency'];        $cant = $_POST['cantidad'];        $ano = $nuevoannio1 . '-00-00 00:00:00';        $annioact = $_POST['year'];        $type_rate = 1;                 $park = $_POST['sodastereo'];        $parques = explode(",", $park);                      //        print_r($parques);//        exit();                if ($dato == 'New') {            $admision_rates = new Admision_rates();            //$parques = new Parques();            $fecha_ini = $_POST['fecha_ini'];            if (isset($admision_rates->fecha_ini)) {                list($mes, $dia, $anyo) = explode("-", $admision_rates->fecha_ini);                $fecha_ini = $mes . "-" . $dia . "-" . $anyo;            }            $fecha_fin = $_POST['fecha_fin'];            if (isset($admision_rates->fecha_fin)) {                list($mes2, $dia2, $anyo2) = explode("-", $admision_rates->fecha_fin);                $fecha_fin = $mes2 . "-" . $dia2 . "-" . $anyo2;                               }                        $iniciale1 = date('Y-m-d', strtotime($_POST['fecha_ini']));             list($mes3, $dia3, $anyo3) = explode("-", $iniciale1);            $iniciale = trim($mes3 . "-" . $dia3 . "-" . $anyo3);                                    $finale1 = date('Y-m-d', strtotime($_POST['fecha_fin']));              list($mes4, $dia4, $anyo4) = explode("-", $finale1);            $finale = trim($mes4 . "-" . $dia4 . "-" . $anyo4);                                           $admision_rates->id_agency = $_POST['id_agency'];            $admision_rates->id_grupo = $_POST['grupale'];            $admision_rates->id_parque = $_POST['id_parque'];            $admision_rates->cantidad = $_POST['cantidad'];            $admision_rates->annio = $nuevoannio1 . '-00-00 00:00:00'; ///////actualizacion marzo 2016            $admision_rates->year = $anyo2;            $admision_rates->fecha_ini = strtotime($fecha_ini);            $admision_rates->fecha_fin = strtotime($fecha_fin);                            if ($admision_rates->id_agency == -1) {                $type_rate = 1;            } else {                $type_rate = 2;            }            $admision_rates->id = Null;                        $fec_inicial = strtotime($fecha_ini);            $fec_final = strtotime($fecha_fin);                                               $cp = count($parques);                        for ($aux = 0; $aux < $cp; $aux++) {//                    $lista = array(//                        "park" => $park,//                        "idGrupo" => $id_grupo,//                        "parques" => $parques,//                        "cantidad" => $cant//                    );                      //cuando la cantidad es mayor que 1 solo ingresamos un registro                       if($cant >1){                         $id_parque = 0;                                                  $cp = 1;                                                    Doo::db()->query("INSERT INTO admin_parques_tarifa                           (id,adults,child,id_grupo,id_parque,cantidad,type_rate,id_agency,company_name,annio,fecha_ini,fecha_fin,adults1,child1,t_adults,t_childs,year,inicio,fin)                            VALUES ('Null','$ad','$ch','$id_grupo','$id_parque','$cant','$type_rate','$id_agency','','$ano','$fec_inicial','$fec_final','$ad1','$ch1','','','$annioact','$iniciale','$finale');");                    }else{                         $id_parque = $parques[$aux];                                                                         $cp = count($parques);                          Doo::db()->query("INSERT INTO admin_parques_tarifa                           (id,adults,child,id_grupo,id_parque,cantidad,type_rate,id_agency,company_name,annio,fecha_ini,fecha_fin,adults1,child1,t_adults,t_childs,year,inicio,fin)                            VALUES ('Null','$ad','$ch','$id_grupo','$id_parque','$cant','$type_rate','$id_agency','','$ano','$fec_inicial','$fec_final','$ad1','$ch1','','','$annioact','$iniciale','$finale');");                                                    Doo::db()->query("INSERT INTO parques_restric                            (id_parque,id_grupo,fecha_ini,fecha_fin,park_select2,park_select3,park_select4,park_select5,park_select6,tari_2,tari_3,tari_4,tari_5,tari_6,inicio,fin,cantidad)                            VALUES ('$id_parque','$id_grupo','$fec_inicial','$fec_final','0','0','0','0','0','0','0','0','0','0','$iniciale','$finale','$cant');");                                              }                        }                        //Capturamos y contamos todos los parques del respectivo grupo seleccionado para incluirlos en las restricciones de las respectivas cantidades.            //$parquetal = $parques[$aux];                         $sql = "SELECT id FROM parques where id_grupo ='$id_grupo' order by id asc";            $rs = Doo::db()->query($sql);            $result = $rs->fetchAll();            $kp2 = count($result);                             foreach($result as $pr){                        $prueba = $pr['id'].",";            $dmd = explode(",", $prueba);            //print_r($dmd);                        for ($aux2 = 0; $aux2 < $kp2; $aux2++) {                           if($cant == 2){                                   //ids de todos los parques que pertenecen al mismo grupo                $id_parquesa = $dmd[$aux2];                                //ids de los parques seleccionados                $idparque = $parques[$aux2];                                      $kp2 = count($result);                                Doo::db()->query("INSERT INTO parques_restric                           (id_parque,id_grupo,fecha_ini,fecha_fin,park_select2,park_select3,park_select4,park_select5,park_select6,tari_2,tari_3,tari_4,tari_5,tari_6,inicio,fin,cantidad)                            VALUES ('$id_parquesa','$id_grupo','$fec_inicial','$fec_final','0','0','0','0','0','0','0','0','0','0','$iniciale','$finale','$cant');");                                Doo::db()->query("DELETE FROM parques_restric WHERE id_parque ='0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //marcamos los parques seleccionados                Doo::db()->query("UPDATE parques_restric SET park_select2 = '1', tari_2 = '0'  WHERE id_parque ='$idparque' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //restringimos los parques no seleccionados                Doo::db()->query("UPDATE parques_restric SET tari_2 = '1' WHERE park_select2 = '0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                               }                              if($cant == 3){                                   //ids de todos los parques que pertenecen al mismo grupo                $id_parquesa = $dmd[$aux2];                                //ids de los parques seleccionados                $idparque = $parques[$aux2];                                     $kp2 = count($result);                                Doo::db()->query("INSERT INTO parques_restric                           (id_parque,id_grupo,fecha_ini,fecha_fin,park_select2,park_select3,park_select4,park_select5,park_select6,tari_2,tari_3,tari_4,tari_5,tari_6,inicio,fin,cantidad)                            VALUES ('$id_parquesa','$id_grupo','$fec_inicial','$fec_final','0','0','0','0','0','0','0','0','0','0','$iniciale','$finale','$cant');");                                Doo::db()->query("DELETE FROM parques_restric WHERE id_parque ='0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //marcamos los parques seleccionados                Doo::db()->query("UPDATE parques_restric SET park_select3 = '1', tari_3 = '0'  WHERE id_parque ='$idparque' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //restringimos los parques no seleccionados                Doo::db()->query("UPDATE parques_restric SET tari_3 = '1' WHERE park_select3 = '0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");               }                              if($cant == 4){                   //ids de todos los parques que pertenecen al mismo grupo                $id_parquesa = $dmd[$aux2];                                //ids de los parques seleccionados                $idparque = $parques[$aux2];                                     $kp2 = count($result);                                Doo::db()->query("INSERT INTO parques_restric                           (id_parque,id_grupo,fecha_ini,fecha_fin,park_select2,park_select3,park_select4,park_select5,park_select6,tari_2,tari_3,tari_4,tari_5,tari_6,inicio,fin,cantidad)                            VALUES ('$id_parquesa','$id_grupo','$fec_inicial','$fec_final','0','0','0','0','0','0','0','0','0','0','$iniciale','$finale','$cant');");                                Doo::db()->query("DELETE FROM parques_restric WHERE id_parque ='0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //marcamos los parques seleccionados                Doo::db()->query("UPDATE parques_restric SET park_select4 = '1', tari_4 = '0'  WHERE id_parque ='$idparque' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //restringimos los parques no seleccionados                Doo::db()->query("UPDATE parques_restric SET tari_4 = '1' WHERE park_select4 = '0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                               }                              if($cant == 5){                   //ids de todos los parques que pertenecen al mismo grupo                $id_parquesa = $dmd[$aux2];                                //ids de los parques seleccionados                $idparque = $parques[$aux2];                                     $kp2 = count($result);                Doo::db()->query("INSERT INTO parques_restric                           (id_parque,id_grupo,fecha_ini,fecha_fin,park_select2,park_select3,park_select4,park_select5,park_select6,tari_2,tari_3,tari_4,tari_5,tari_6,inicio,fin,cantidad)                            VALUES ('$id_parquesa','$id_grupo','$fec_inicial','$fec_final','0','0','0','0','0','0','0','0','0','0','$iniciale','$finale','$cant');");                                Doo::db()->query("DELETE FROM parques_restric WHERE id_parque ='0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //marcamos los parques seleccionados                Doo::db()->query("UPDATE parques_restric SET park_select5 = '1', tari_5 = '0'  WHERE id_parque ='$idparque' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //restringimos los parques no seleccionados                Doo::db()->query("UPDATE parques_restric SET tari_5 = '1' WHERE park_select5 = '0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                               }                              if($cant >= 6){                   //ids de todos los parques que pertenecen al mismo grupo                $id_parquesa = $dmd[$aux2];                                //ids de los parques seleccionados                $idparque = $parques[$aux2];                                     $kp2 = count($result);                                                Doo::db()->query("INSERT INTO parques_restric                           (id_parque,id_grupo,fecha_ini,fecha_fin,park_select2,park_select3,park_select4,park_select5,park_select6,tari_2,tari_3,tari_4,tari_5,tari_6,inicio,fin,cantidad)                            VALUES ('$id_parquesa','$id_grupo','$fec_inicial','$fec_final','0','0','0','0','0','0','0','0','0','0','$iniciale','$finale','$cant');");                                Doo::db()->query("DELETE FROM parques_restric WHERE id_parque ='0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //marcamos los parques seleccionados                Doo::db()->query("UPDATE parques_restric SET park_select6 = '1', tari_6 = '0'  WHERE id_parque ='$idparque' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                                //restringimos los parques no seleccionados                Doo::db()->query("UPDATE parques_restric SET tari_6 = '1' WHERE park_select6 = '0' AND id_grupo='$id_grupo' AND cantidad ='$cant' AND fecha_ini = '$fec_inicial' AND fecha_fin = '$fec_final'");                               }                                      }                        }                               return Doo::conf()->APP_URL . "admin/tours/admision-rate/" . $type_rate;                            } elseif ($dato == 'edit') {                                  $fecha_ini2 = $_POST['fecha_ini'];            $fecha_ini22 = strtotime($fecha_ini2);            $fecha_fin2 = $_POST['fecha_fin'];            $fecha_fin22 = strtotime($fecha_fin2);                        $finiciale1 = date('Y-m-d', strtotime($_POST['fecha_ini']));               list($mes5, $dia5, $anyo5) = explode("-", $finiciale1);            $finiciale = $mes5 . "-" . $dia5 . "-" . $anyo5;                        $ffinale1 = date('Y-m-d', strtotime($_POST['fecha_fin']));              list($mes6, $dia6, $anyo6) = explode("-", $ffinale1);            $ffinale = $mes6 . "-" . $dia6 . "-" . $anyo6;                        $id_adm = $_POST['id'];            $ad = $_POST['adults'];            $ch = $_POST['child'];            $ad1 = $_POST['adults1'];            $ch1 = $_POST['child1'];            $idgrupo_e = $_POST['idgrupo_e'];                        $id_parque = $_POST['idparque'];            $cant = $_POST['cantidad_ed'];            $annioact = $_POST['year'];            $type_rate = 1;                                    Doo::db()->query("UPDATE admin_parques_tarifa SET id_grupo='$idgrupo_e', id_parque='$id_parque', cantidad='$cant', adults='$ad', child='$ch', adults1='$ad1', child1='$ch1', fecha_ini='$fecha_ini22', fecha_fin='$fecha_fin22',year='$annioact',inicio='$finiciale',fin='$ffinale' WHERE id='$id_adm'");//            $_SESSION['login'] = "Rates Successfully Update...!!";            return Doo::conf()->APP_URL . "admin/tours/admision-rate/" . $type_rate;        }            }    public function edit() {        Doo::loadModel("Admision_rates");        $admision_rates = new Admision_rates();        $admision_rates->id = $this->params["pindex"];        $admision_rates = Doo::db()->find($admision_rates, array('limit' => 1));        $this->data['rootUrl'] = Doo::conf()->APP_URL;        $this->data['admision_rates'] = $admision_rates;        $this->data['grupos'] = Doo::db()->find("Grupo_parque", array("asArray" => true));        $this->data['parques'] = Doo::db()->find("Parques", array("asArray" => true));        $this->data['content'] = 'configuracion/frm_admin_rates.php';        $this->data['dato'] = "edit";        $this->view()->renderc('admin/index', $this->data);    }    public function delete() {        Doo::loadModel("Admision_rates");        Doo::loadModel("Parques_restric");         $admision_rates = new Admision_rates();        $parques_restric = new Parques_restric();                $admision_rates->id = $_REQUEST['item'];        $id = $admision_rates->id;                        $sql = "SELECT * FROM  admin_parques_tarifa WHERE id = '$id' ";        $rs = Doo::db()->query($sql);        $result = $rs->fetchAll();                foreach ($result as $consul){                    }        $id_parque = $consul['id_parque'];        $id_grupo = $consul['id_grupo'];        $fecha_ini = $consul['fecha_ini'];        $fecha_fin = $consul['fecha_fin'];                //echo $id."-".$id_parque."-".$id_grupo."-".$fecha_ini."-".$fecha_fin;                //exit();                $admision_rates = Doo::db()->find($admision_rates, array('limit' => 1));        Doo::db()->delete($admision_rates);                Doo::db()->query("DELETE FROM  parques_restric WHERE id_parque = '$id_parque' AND id_grupo = '$id_grupo' AND fecha_ini = '$fecha_ini' AND fecha_fin ='$fecha_fin'");                return Doo::conf()->APP_URL . "admin/tours/admision-rate/" . $admision_rates->type_rate;    }///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    public function list_admincost() {        Doo::loadHelper('DooPager');        if (!isset($_POST["filtro"])) {            if (!isset($this->params['filtro'])) {                $filtro = "gp.nombre";            } else {                $filtro = $this->params['filtro'];            }        } else {            $filtro = $_POST["filtro"];        }        if (!isset($_POST["texto"])) {            if (!isset($this->params['texto'])) {                $texto = "";            } else {                $texto = $this->params['texto'] . '%';            }        } else {            $texto = $_POST["texto"] . '%';        }        $sql0 = "SELECT count(*) as total FROM admin_parques_tarifa as apt left join grupo_parques as gp on (apt.id_grupo = gp.id) left join parques as p on (apt.id_parque = p.id) where type_rate = -1 and $filtro like '%$texto'";        $q0 = Doo::db()->query($sql0);        $rs = $q0->fetchAll();        $total = $rs[0]['total'];        if ($total == 0)            $total = 1;        // iniciamos el paginador        $stext = (trim($texto) == '') ? '%' : '%' . $texto;        $pager = new DooPager(Doo::conf()->APP_URL . "admin/tours/admision-cost/$filtro/$texto/page", $total, 10, 5);        $sql = "SELECT gp.nombre as grupo, IFNULL(p.nombre,'') as parque,apt.id, apt.cantidad, apt.adults, apt.child, apt.annio FROM admin_parques_tarifa as apt left join grupo_parques as gp on (apt.id_grupo = gp.id) left join parques as p on (apt.id_parque = p.id) where type_rate = -1 and $filtro like ? order by apt.annio DESC";        $q = Doo::db()->query($sql, array($stext));        $rs = $q->fetchAll();        if (isset($this->params['pindex']))            $pager->paginate(intval($this->params['pindex']));        else            $pager->paginate(1);        $this->data['pager'] = $pager->output;        $this->data['filtro'] = $filtro;        $this->data['texto'] = substr($texto, 0, -1);        $this->data['admin_rates'] = $rs;        $this->data['rootUrl'] = Doo::conf()->APP_URL;        $this->data['content'] = 'configuracion/admin_cost.php';        $this->view()->renderc('admin/index', $this->data, true);    }    public function addadmincost() {        Doo::loadModel("Admision_rates");        $admision_rates = new Admision_rates();        $admision_rates->type_rate = -1; //type_rate -1 para costos reales de tiquetes        $admision_rates->id_agency = -1;        $admision_rates->id = -1;        $this->data['rootUrl'] = Doo::conf()->APP_URL;        $this->data['grupos'] = Doo::db()->find("Grupo_parque", array("asArray" => true));        $this->data['parques'] = Doo::db()->find("Parques", array("asArray" => true));        $this->data['admision_rates'] = $admision_rates;        $this->data['content'] = 'configuracion/frm_admin_cost.php';        $this->data['dato'] = "New";        $this->renderc('admin/index', $this->data);    }    public function editadmincost() {        $id = $this->params['id'];        Doo::loadModel("Admision_rates");        $admision_rates = new Admision_rates();        $admision_rates->id = $id;        $admision_rates->type_rate = -1; //type_rate -1 para costos reales de tiquetes        $admision_rates->id_agency = -1;        $admision_rates = Doo::db()->getOne($admision_rates);        $this->data['rootUrl'] = Doo::conf()->APP_URL;        $this->data['grupos'] = Doo::db()->find("Grupo_parque", array("asArray" => true));        $this->data['parques'] = Doo::db()->find("Parques", array("asArray" => true));        $this->data['admision_rates'] = $admision_rates;        $this->data['content'] = 'configuracion/frm_admin_cost.php';        $this->data['dato'] = "New";        $this->renderc('admin/index', $this->data);    }    public function saveadmincost() {        Doo::loadModel("Admision_rates");        $cost_admision = new Admision_rates();        $cost_admision->type_rate = -1;        $cost_admision->id_agency = -1;        $cost_admision->id_parque = $_POST['id_parque'];        $cost_admision->id_grupo = $_POST['id_grupo'];        $cost_admision->cantidad = $_POST['cantidad'];        $cost_admision->adults = $_POST['adults'];        $cost_admision->child = $_POST['child'];        $cost_admision->annio = $_POST['annio'] . '-01-01 00:00:00';        if ($_POST['id'] == -1) {            $cost_admision->insert();        } else {            $cost_admision->id = $_POST['id'];            $cost_admision->update();        }        return Doo::conf()->APP_URL . 'admin/tours/admision-cost';    }    public function deleteadmincost() {        $id = $this->params['id'];        $sql = "delete from admin_parques_tarifa where id = ?";        $q = Doo::db()->query($sql, array($id));        return Doo::conf()->APP_URL . 'admin/tours/admision-cost';    }}